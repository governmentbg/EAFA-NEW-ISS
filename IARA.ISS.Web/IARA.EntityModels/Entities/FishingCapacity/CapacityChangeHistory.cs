// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// История на промени в риболовен капацитет
    /// </summary>
    [Table("CapacityChangeHistory", Schema = "RCap")]
    [Index(nameof(AcquiredFishingCapacityId), Name = "IXFK_CapacityChangeHistory_AcquiredCapacityRegister")]
    [Index(nameof(ApplicationId), Name = "IXFK_CapacityChangeHistory_Applications")]
    [Index(nameof(CapacityCertificateTransferId), Name = "IXFK_CapacityChangeHistory_CapacityCertificatesRegister_02")]
    [Index(nameof(RegisterApplicationId), Name = "IXFK_CapacityChangeHistory_CapacityChangeHistory")]
    [Index(nameof(ShipCapacityId), Name = "IXFK_CapacityChangeHistory_ShipCapacityRegister")]
    public partial class CapacityChangeHistory
    {
        public CapacityChangeHistory()
        {
            CapacityChangeHistoryCertificates = new HashSet<CapacityChangeHistoryCertificate>();
            InverseRegisterApplication = new HashSet<CapacityChangeHistory>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Заявление
        /// </summary>
        [Column("ApplicationID")]
        public int? ApplicationId { get; set; }
        /// <summary>
        /// Тип на запис - заявление или регистров :  Application / Register
        /// </summary>
        [Required]
        [StringLength(50)]
        public string RecordType { get; set; }
        /// <summary>
        /// Заявление, от което е създаден регистровия запис - само при ApplicationStatus = &apos;Register&apos;
        /// </summary>
        [Column("RegisterApplicationID")]
        public int? RegisterApplicationId { get; set; }
        /// <summary>
        /// Дата на промяната
        /// </summary>
        public DateTime DateOfChange { get; set; }
        /// <summary>
        /// Корабен капацитет при увеличаване и намаляване
        /// </summary>
        [Column("ShipCapacityID")]
        public int? ShipCapacityId { get; set; }
        /// <summary>
        /// Осигурен риболовен капацитет при увеличаване
        /// </summary>
        [Column("AcquiredFishingCapacityID")]
        public int? AcquiredFishingCapacityId { get; set; }
        /// <summary>
        /// Тип на промяната (Increase, Decrease, Transfer, Duplicate)
        /// </summary>
        [Required]
        [StringLength(50)]
        public string TypeOfChange { get; set; }
        /// <summary>
        /// Удостоверение за капацитет при прехвърляне
        /// </summary>
        [Column("CapacityCertificateTransferID")]
        public int? CapacityCertificateTransferId { get; set; }
        /// <summary>
        /// Бруто тонаж за увеличаване/намаляване
        /// </summary>
        public decimal? GrossTonnageChange { get; set; }
        /// <summary>
        /// Мощност за увеличаване/намаляване
        /// </summary>
        public decimal? PowerChange { get; set; }
        /// <summary>
        /// Причина за промяна
        /// </summary>
        [StringLength(4000)]
        public string ReasonOfChange { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AcquiredFishingCapacityId))]
        [InverseProperty(nameof(AcquiredCapacityRegister.CapacityChangeHistories))]
        public virtual AcquiredCapacityRegister AcquiredFishingCapacity { get; set; }
        [ForeignKey(nameof(ApplicationId))]
        [InverseProperty("CapacityChangeHistories")]
        public virtual Application Application { get; set; }
        [ForeignKey(nameof(CapacityCertificateTransferId))]
        [InverseProperty(nameof(CapacityCertificatesRegister.CapacityChangeHistories))]
        public virtual CapacityCertificatesRegister CapacityCertificateTransfer { get; set; }
        [ForeignKey(nameof(RegisterApplicationId))]
        [InverseProperty(nameof(CapacityChangeHistory.InverseRegisterApplication))]
        public virtual CapacityChangeHistory RegisterApplication { get; set; }
        [ForeignKey(nameof(ShipCapacityId))]
        [InverseProperty(nameof(ShipCapacityRegister.CapacityChangeHistories))]
        public virtual ShipCapacityRegister ShipCapacity { get; set; }
        [InverseProperty(nameof(CapacityChangeHistoryCertificate.CapacityChangeHistory))]
        public virtual ICollection<CapacityChangeHistoryCertificate> CapacityChangeHistoryCertificates { get; set; }
        [InverseProperty(nameof(CapacityChangeHistory.RegisterApplication))]
        public virtual ICollection<CapacityChangeHistory> InverseRegisterApplication { get; set; }
    }
}