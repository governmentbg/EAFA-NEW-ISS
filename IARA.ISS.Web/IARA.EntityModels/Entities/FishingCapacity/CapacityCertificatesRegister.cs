// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Удостоверения за свободен риболовен капацитет
    /// </summary>
    [Table("CapacityCertificatesRegister", Schema = "RCap")]
    [Index(nameof(LegalId), Name = "IXFK_CapacityCertificatesRegister_Legals")]
    [Index(nameof(PersonId), Name = "IXFK_CapacityCertificatesRegister_Persons")]
    public partial class CapacityCertificatesRegister
    {
        public CapacityCertificatesRegister()
        {
            AcquiredCapacityCertificates = new HashSet<AcquiredCapacityCertificate>();
            CapacityChangeHistories = new HashSet<CapacityChangeHistory>();
            CapacityChangeHistoryCertificates = new HashSet<CapacityChangeHistoryCertificate>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Тип на запис - заявление или регистров :  Application / Register
        /// </summary>
        [Required]
        [StringLength(50)]
        public string RecordType { get; set; }
        /// <summary>
        /// Номер на удостоверение (само при Register запис)
        /// </summary>
        public int? CertificateNum { get; set; }
        /// <summary>
        /// Физическо лице титуляр на удостоверението
        /// </summary>
        [Column("PersonID")]
        public int? PersonId { get; set; }
        /// <summary>
        /// Юридическо лице титуляр на удостоверението
        /// </summary>
        [Column("LegalID")]
        public int? LegalId { get; set; }
        /// <summary>
        /// Бруто тонаж
        /// </summary>
        public decimal GrossTonnage { get; set; }
        /// <summary>
        /// Мощност на главния двигател (kW)
        /// </summary>
        public decimal MainEnginePower { get; set; }
        /// <summary>
        /// Начална дата на валидност на удостоверението
        /// </summary>
        public DateTime CertificateValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на удостоверението (3 години след началната)
        /// </summary>
        public DateTime CertificateValidTo { get; set; }
        /// <summary>
        /// Коментари и бележки
        /// </summary>
        [StringLength(4000)]
        public string Comments { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(LegalId))]
        [InverseProperty("CapacityCertificatesRegisters")]
        public virtual Legal Legal { get; set; }
        [ForeignKey(nameof(PersonId))]
        [InverseProperty("CapacityCertificatesRegisters")]
        public virtual Person Person { get; set; }
        [InverseProperty(nameof(AcquiredCapacityCertificate.CapacityCertificate))]
        public virtual ICollection<AcquiredCapacityCertificate> AcquiredCapacityCertificates { get; set; }
        [InverseProperty(nameof(CapacityChangeHistory.CapacityCertificateTransfer))]
        public virtual ICollection<CapacityChangeHistory> CapacityChangeHistories { get; set; }
        [InverseProperty(nameof(CapacityChangeHistoryCertificate.CapacityCertificate))]
        public virtual ICollection<CapacityChangeHistoryCertificate> CapacityChangeHistoryCertificates { get; set; }
    }
}