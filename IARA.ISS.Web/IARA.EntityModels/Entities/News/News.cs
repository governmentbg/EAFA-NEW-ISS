// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Новини
    /// </summary>
    [Table("News", Schema = "News")]
    [Index(nameof(PublishStart), Name = "IX_News_News_PublishStart")]
    public partial class News
    {
        public News()
        {
            NewsDistricts = new HashSet<NewsDistrict>();
            NewsFiles = new HashSet<NewsFile>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Заглавие
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Title { get; set; }
        /// <summary>
        /// Съдържание
        /// </summary>
        [Required]
        public string Contents { get; set; }
        /// <summary>
        /// Обобщение на съдържанието за заглавната страница
        /// </summary>
        [Required]
        [StringLength(1000)]
        public string ContentSummary { get; set; }
        /// <summary>
        /// Флаг дали новината се отнася за конкретна област. Ако не - значи излиза за всички (праща се до всички абонирани за всички области)
        /// </summary>
        public bool IsDistrictLimited { get; set; }
        /// <summary>
        /// Флаг дали са разпратени нотификации за новината до абонатите
        /// </summary>
        public bool HasNotificationsSent { get; set; }
        /// <summary>
        /// Начало на публикуване на новината
        /// </summary>
        public DateTime? PublishStart { get; set; }
        /// <summary>
        /// Край на публичност на новината
        /// </summary>
        public DateTime? PublishEnd { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [InverseProperty(nameof(NewsDistrict.News))]
        public virtual ICollection<NewsDistrict> NewsDistricts { get; set; }
        [InverseProperty(nameof(NewsFile.Record))]
        public virtual ICollection<NewsFile> NewsFiles { get; set; }
    }
}