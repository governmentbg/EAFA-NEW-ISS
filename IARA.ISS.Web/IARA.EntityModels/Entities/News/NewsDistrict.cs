// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Области, за които се отнася дадена новина
    /// </summary>
    [Table("NewsDistricts", Schema = "News")]
    [Index(nameof(DistrictId), Name = "IXFK_NewsDistricts_NDistricts")]
    [Index(nameof(NewsId), Name = "IXFK_NewsDistricts_News")]
    [Index(nameof(DistrictId), nameof(NewsId), Name = "UK_News_NewsDistricts", IsUnique = true)]
    public partial class NewsDistrict
    {         public NewsDistrict()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("NewsID")]
        public int NewsId { get; set; }
        [Column("DistrictID")]
        public int DistrictId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(DistrictId))]
        [InverseProperty(nameof(Ndistrict.NewsDistricts))]
        public virtual Ndistrict District { get; set; }
        [ForeignKey(nameof(NewsId))]
        [InverseProperty("NewsDistricts")]
        public virtual News News { get; set; }
    }
}
