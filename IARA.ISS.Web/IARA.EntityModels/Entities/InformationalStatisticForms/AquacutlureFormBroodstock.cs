// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Маточно стадо (разплодници) за аквакултирни ИСФ
    /// </summary>
    [Table("AquacutlureFormBroodstocks", Schema = "RInfStat")]
    [Index(nameof(AquacultureFormId), Name = "IXFK_AquaFormBrood_AquacutlureForms")]
    [Index(nameof(InstallationTypeId), Name = "IXFK_AquaFormBrood_NAquacultureInstallationTypes")]
    [Index(nameof(FishId), Name = "IXFK_AquacutlureFormBroodstocks_NFishes")]
    [Index(nameof(AquacultureFormId), nameof(InstallationTypeId), nameof(FishId), Name = "UK_RInfStat_AquacutlureFormBroodstocks", IsUnique = true)]
    public partial class AquacutlureFormBroodstock
    {         public AquacutlureFormBroodstock()
        {
            this.IsActive = true;
        }


        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("AquacultureFormID")]
        public int AquacultureFormId { get; set; }
        /// <summary>
        /// За тип съоражение
        /// </summary>
        [Column("InstallationTypeID")]
        public int InstallationTypeId { get; set; }
        /// <summary>
        /// Вид риба
        /// </summary>
        [Column("FishID")]
        public int FishId { get; set; }
        /// <summary>
        /// Мъжки индивиди - брой
        /// </summary>
        public int? MaleCount { get; set; }
        /// <summary>
        /// Мъжки индивиди - тегло гр
        /// </summary>
        public decimal? MaleWeight { get; set; }
        /// <summary>
        /// Възраст (год)
        /// </summary>
        public int? MaleAge { get; set; }
        /// <summary>
        /// Женски индивиди - брой
        /// </summary>
        public int? FemaleCount { get; set; }
        /// <summary>
        /// Женски индивиди - тегло (гр)
        /// </summary>
        public decimal? FemaleWeight { get; set; }
        /// <summary>
        /// Женски индивиди - възраст (год)
        /// </summary>
        public int? FemaleAge { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AquacultureFormId))]
        [InverseProperty(nameof(AquacutlureForm.AquacutlureFormBroodstocks))]
        public virtual AquacutlureForm AquacultureForm { get; set; }
        [ForeignKey(nameof(FishId))]
        [InverseProperty(nameof(Nfish.AquacutlureFormBroodstocks))]
        public virtual Nfish Fish { get; set; }
        [ForeignKey(nameof(InstallationTypeId))]
        [InverseProperty(nameof(NaquacultureInstallationType.AquacutlureFormBroodstocks))]
        public virtual NaquacultureInstallationType InstallationType { get; set; }
    }
}
