// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// ИСФ за аквакултурни стопанства
    /// </summary>
    [Table("AquacutlureForms", Schema = "RInfStat")]
    [Index(nameof(AquacultureFacilityId), Name = "IXFK_AquacutlureForms_AquacultureFacilityRegister")]
    [Index(nameof(StatisticalFormId), Name = "IXFK_AquacutlureForms_StatisticalFormsRegister")]
    [Index(nameof(StatisticalFormId), Name = "UK_RInfStat_AquacutlureForms", IsUnique = true)]
    public partial class AquacutlureForm
    {
        public AquacutlureForm()
        {
            AquacultureFormFullSystemInstallations = new HashSet<AquacultureFormFullSystemInstallation>();
            AquacultureFormNonFullSystemInstallations = new HashSet<AquacultureFormNonFullSystemInstallation>();
            AquacutlureFormBroodstocks = new HashSet<AquacutlureFormBroodstock>();
            AquacutlureFormGivenMedicines = new HashSet<AquacutlureFormGivenMedicine>();
            AquacutlureFormStockingMaterials = new HashSet<AquacutlureFormStockingMaterial>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Заявление, от което е създаден регистровия запис - само при ApplicationStatus = &apos;Register&apos;
        /// </summary>
        [Column("StatisticalFormID")]
        public int StatisticalFormId { get; set; }
        [Column("AquacultureFacilityID")]
        public int? AquacultureFacilityId { get; set; }
        /// <summary>
        /// Бележки за приложени препарати или лечение
        /// </summary>
        [StringLength(4000)]
        public string GivenMedicineNotes { get; set; }
        /// <summary>
        /// Смъртност на зарибителния материал (%)
        /// </summary>
        public decimal? BreedingMaterialDeathRate { get; set; }
        /// <summary>
        /// Смъртност на рибата за консумация (%)
        /// </summary>
        public decimal? ConsumationFishDeathRate { get; set; }
        /// <summary>
        /// Смъртност на маточното стадо (%)
        /// </summary>
        public decimal? BroodstockDeathRate { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AquacultureFacilityId))]
        [InverseProperty(nameof(AquacultureFacilityRegister.AquacutlureForms))]
        public virtual AquacultureFacilityRegister AquacultureFacility { get; set; }
        [ForeignKey(nameof(StatisticalFormId))]
        [InverseProperty(nameof(StatisticalFormsRegister.AquacutlureForm))]
        public virtual StatisticalFormsRegister StatisticalForm { get; set; }
        [InverseProperty(nameof(AquacultureFormFullSystemInstallation.AquacultureForm))]
        public virtual ICollection<AquacultureFormFullSystemInstallation> AquacultureFormFullSystemInstallations { get; set; }
        [InverseProperty(nameof(AquacultureFormNonFullSystemInstallation.AquacultureForm))]
        public virtual ICollection<AquacultureFormNonFullSystemInstallation> AquacultureFormNonFullSystemInstallations { get; set; }
        [InverseProperty(nameof(AquacutlureFormBroodstock.AquacultureForm))]
        public virtual ICollection<AquacutlureFormBroodstock> AquacutlureFormBroodstocks { get; set; }
        [InverseProperty(nameof(AquacutlureFormGivenMedicine.AquacultureForm))]
        public virtual ICollection<AquacutlureFormGivenMedicine> AquacutlureFormGivenMedicines { get; set; }
        [InverseProperty(nameof(AquacutlureFormStockingMaterial.AquacultureForm))]
        public virtual ICollection<AquacutlureFormStockingMaterial> AquacutlureFormStockingMaterials { get; set; }
    }
}