// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Статуси на аквакултурно стопанство
    /// </summary>
    [Table("AquacultureFacilityStatuses", Schema = "RAquaSt")]
    [Index(nameof(AquacultureFacilityId), Name = "IXFK_AquacultureFacilityStatuses_AquacultureFacilityRegister")]
    [Index(nameof(CancellationReasonId), Name = "IXFK_AquacultureFacilityStatuses_NCancellationReasons")]
    [Index(nameof(AquacultureFacilityId), nameof(ValidTo), Name = "UK_RAquaSt_AquacultureFacilityStatuses", IsUnique = true)]
    public partial class AquacultureFacilityStatus
    {
        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Аквакултурно стопанство
        /// </summary>
        [Column("AquacultureFacilityID")]
        public int AquacultureFacilityId { get; set; }
        /// <summary>
        /// Вид прекратяване
        /// </summary>
        [Column("CancellationReasonID")]
        public int CancellationReasonId { get; set; }
        /// <summary>
        /// Флаг дали стопанството е прекратено
        /// </summary>
        public bool IsCancelled { get; set; }
        /// <summary>
        /// Дата на прекратяване/възстановяване
        /// </summary>
        public DateTime DateOfChange { get; set; }
        /// <summary>
        /// Номер на заповед
        /// </summary>
        [StringLength(200)]
        public string IssueOrderNum { get; set; }
        /// <summary>
        /// Описание (свободен текст)
        /// </summary>
        [StringLength(4000)]
        public string Description { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AquacultureFacilityId))]
        [InverseProperty(nameof(AquacultureFacilityRegister.AquacultureFacilityStatuses))]
        public virtual AquacultureFacilityRegister AquacultureFacility { get; set; }
        [ForeignKey(nameof(CancellationReasonId))]
        [InverseProperty(nameof(NcancellationReason.AquacultureFacilityStatuses))]
        public virtual NcancellationReason CancellationReason { get; set; }
    }
}