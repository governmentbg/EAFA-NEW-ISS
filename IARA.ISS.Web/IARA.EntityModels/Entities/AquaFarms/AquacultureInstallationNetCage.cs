// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Мрежени клетки (садки) към съоръжение на аквакултурно стопанство
    /// </summary>
    [Table("AquacultureInstallationNetCages", Schema = "RAquaSt")]
    [Index(nameof(AquacultureInstallationId), Name = "IXFK_AquaInstallNetCages_AquacultureFacilityInstalls")]
    [Index(nameof(NetCageTypeId), Name = "IXFK_AquaInstallNetCages_NInstallationNetCageTypes")]
    public partial class AquacultureInstallationNetCage
    {         public AquacultureInstallationNetCage()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Съоръжение
        /// </summary>
        [Column("AquacultureInstallationID")]
        public int AquacultureInstallationId { get; set; }
        /// <summary>
        /// Вид мрежена клетка
        /// </summary>
        [Column("NetCageTypeID")]
        public int NetCageTypeId { get; set; }
        /// <summary>
        /// Форма
        /// </summary>
        [Required]
        [StringLength(50)]
        public string NetCageShape { get; set; }
        /// <summary>
        /// Радиус (м)
        /// </summary>
        public decimal? Radius { get; set; }
        /// <summary>
        /// Дължина (м)
        /// </summary>
        public decimal? Length { get; set; }
        /// <summary>
        /// Широчина (м)
        /// </summary>
        public decimal? Width { get; set; }
        /// <summary>
        /// Височина (м)
        /// </summary>
        public decimal? Height { get; set; }
        /// <summary>
        /// Площ (кв. м.)
        /// </summary>
        public decimal Area { get; set; }
        /// <summary>
        /// Обем (куб. м.)
        /// </summary>
        public decimal Volume { get; set; }
        /// <summary>
        /// Брой
        /// </summary>
        public int Count { get; set; }
        /// <summary>
        /// Коментари
        /// </summary>
        [StringLength(500)]
        public string Comments { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AquacultureInstallationId))]
        [InverseProperty(nameof(AquacultureFacilityInstallation.AquacultureInstallationNetCages))]
        public virtual AquacultureFacilityInstallation AquacultureInstallation { get; set; }
        [ForeignKey(nameof(NetCageTypeId))]
        [InverseProperty(nameof(NinstallationNetCageType.AquacultureInstallationNetCages))]
        public virtual NinstallationNetCageType NetCageType { get; set; }
    }
}
