// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Разрешителни на аквакултурно стопанство по Закона за водите
    /// </summary>
    [Table("AquacultureWaterLawCertificates", Schema = "RAquaSt")]
    [Index(nameof(AquacultureFacilityId), Name = "IXFK_AquaWaterLawCert_AquaFacilityRegister")]
    [Index(nameof(CertificateTypeId), Name = "IXFK_AquacultureWaterLawCert_NWaterLawCertificateTypes")]
    [Index(nameof(AquacultureFacilityId), nameof(CertificateValidTo), Name = "UK_RAquaSt_NAquacultureWaterLawCertificates", IsUnique = true)]
    public partial class AquacultureWaterLawCertificate
    {         public AquacultureWaterLawCertificate()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Уникален идентификатор на аквакултурно стопанство
        /// </summary>
        [Column("AquacultureFacilityID")]
        public int AquacultureFacilityId { get; set; }
        /// <summary>
        /// Уникален идентификатор на тип разрешително по Закона за водите
        /// </summary>
        [Column("CertificateTypeID")]
        public int CertificateTypeId { get; set; }
        /// <summary>
        /// Номер на разрешителното
        /// </summary>
        [Required]
        [StringLength(50)]
        public string CertificateNum { get; set; }
        /// <summary>
        /// Издател на разрешителното
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CertificateIssuer { get; set; }
        /// <summary>
        /// Начална дата на валидност на разрешителното
        /// </summary>
        public DateTime CertificateValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на разрешителното
        /// </summary>
        public DateTime? CertificateValidTo { get; set; }
        /// <summary>
        /// Коментар
        /// </summary>
        [StringLength(4000)]
        public string Comments { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AquacultureFacilityId))]
        [InverseProperty(nameof(AquacultureFacilityRegister.AquacultureWaterLawCertificates))]
        public virtual AquacultureFacilityRegister AquacultureFacility { get; set; }
        [ForeignKey(nameof(CertificateTypeId))]
        [InverseProperty(nameof(NwaterLawCertificateType.AquacultureWaterLawCertificates))]
        public virtual NwaterLawCertificateType CertificateType { get; set; }
    }
}
