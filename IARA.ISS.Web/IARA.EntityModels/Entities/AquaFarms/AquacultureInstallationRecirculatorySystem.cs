// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Рециркулационни системи към съоръжение на аквакултурно стопанство
    /// </summary>
    [Table("AquacultureInstallationRecirculatorySystems", Schema = "RAquaSt")]
    [Index(nameof(AquacultureInstallationId), Name = "IXFK_AquaInstallRecircSystems_AquacFacilityInstalls")]
    [Index(nameof(InstallationBasinId), Name = "IXFK_AquaInstallRecircSystems_InstallationBasins")]
    [Index(nameof(AquacultureInstallationId), nameof(InstallationBasinId), Name = "UK_RAquaSt_AquaInstallRecircSystems", IsUnique = true)]
    public partial class AquacultureInstallationRecirculatorySystem
    {         public AquacultureInstallationRecirculatorySystem()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Съоръжение
        /// </summary>
        [Column("AquacultureInstallationID")]
        public int AquacultureInstallationId { get; set; }
        /// <summary>
        /// Басейн
        /// </summary>
        [Column("InstallationBasinID")]
        public int InstallationBasinId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Коментари
        /// </summary>
        [StringLength(500)]
        public string Comments { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AquacultureInstallationId))]
        [InverseProperty(nameof(AquacultureFacilityInstallation.AquacultureInstallationRecirculatorySystems))]
        public virtual AquacultureFacilityInstallation AquacultureInstallation { get; set; }
        [ForeignKey(nameof(InstallationBasinId))]
        [InverseProperty("AquacultureInstallationRecirculatorySystems")]
        public virtual InstallationBasin InstallationBasin { get; set; }
    }
}
