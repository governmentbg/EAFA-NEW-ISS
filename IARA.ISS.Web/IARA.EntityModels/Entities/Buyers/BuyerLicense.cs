// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Удостоверения от други институции (БАБХ, регистрация на транспортно средство, ..)
    /// </summary>
    [Table("BuyerLicenses", Schema = "RCPP")]
    [Index(nameof(BuyerLicenceTypeId), Name = "IXFK_BuyerLicenses_NBuyerLicenseTypes")]
    [Index(nameof(BuyerId), Name = "IXFK_RCPP_BuyerLicenses_RCPP_BuyersRegister")]
    [Index(nameof(BuyerId), nameof(DocNum), Name = "UK_RCPP_BuyerLicenses", IsUnique = true)]
    public partial class BuyerLicense
    {
        public BuyerLicense()
        {
            BuyerLicenseFiles = new HashSet<BuyerLicenseFile>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Регистриран купувач
        /// </summary>
        [Column("BuyerID")]
        public int BuyerId { get; set; }
        [Column("BuyerLicenceTypeID")]
        public int BuyerLicenceTypeId { get; set; }
        /// <summary>
        /// Номер на документ
        /// </summary>
        [Required]
        [StringLength(50)]
        public string DocNum { get; set; }
        /// <summary>
        /// Издател 
        /// </summary>
        [Required]
        [StringLength(500)]
        public string DocIssuer { get; set; }
        /// <summary>
        /// Дата на издаване
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime IssueDate { get; set; }
        /// <summary>
        /// Валидност от
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime DocValidFrom { get; set; }
        /// <summary>
        /// Валидност до
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? DocValidTo { get; set; }
        /// <summary>
        /// Флаг дали е безсрочен
        /// </summary>
        public bool IsUnlimited { get; set; }
        /// <summary>
        /// Коментар
        /// </summary>
        [StringLength(4000)]
        public string Comment { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(BuyerId))]
        [InverseProperty(nameof(BuyerRegister.BuyerLicenses))]
        public virtual BuyerRegister Buyer { get; set; }
        [ForeignKey(nameof(BuyerLicenceTypeId))]
        [InverseProperty(nameof(NbuyerLicenseType.BuyerLicenses))]
        public virtual NbuyerLicenseType BuyerLicenceType { get; set; }
        [InverseProperty(nameof(BuyerLicenseFile.Record))]
        public virtual ICollection<BuyerLicenseFile> BuyerLicenseFiles { get; set; }
    }
}