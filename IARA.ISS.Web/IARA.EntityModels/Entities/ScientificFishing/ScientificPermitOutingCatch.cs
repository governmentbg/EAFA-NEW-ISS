// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Излети за научен риболов
    /// </summary>
    [Table("ScientificPermitOutingCatches", Schema = "RNauR")]
    [Index(nameof(FishId), Name = "IXFK_ScientificPermitOutingCatches_NFishes")]
    [Index(nameof(ScientificPermitOutingId), Name = "IXFK_ScientificPermitOutingCatches_ScientificPermitOutings")]
    [Index(nameof(ScientificPermitOutingId), nameof(FishId), Name = "UK_ScientificPermitOutingCatches", IsUnique = true)]
    public partial class ScientificPermitOutingCatch
    {         public ScientificPermitOutingCatch()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Излет за научен риболов
        /// </summary>
        [Column("ScientificPermitOutingID")]
        public int ScientificPermitOutingId { get; set; }
        /// <summary>
        /// Вид риба
        /// </summary>
        [Column("FishID")]
        public int FishId { get; set; }
        /// <summary>
        /// Улов бройки под 100гр
        /// </summary>
        public int CatchUnder100 { get; set; }
        /// <summary>
        /// Улов бройки 100-500гр
        /// </summary>
        public int Catch100To500 { get; set; }
        /// <summary>
        /// Улов бройки 500гр- 1000гр
        /// </summary>
        public int Catch500To1000 { get; set; }
        /// <summary>
        /// Улов бройки над 1000гр
        /// </summary>
        public int CatchOver1000 { get; set; }
        /// <summary>
        /// Общ брой на задържаните екземпляри
        /// </summary>
        public int TotalKeptCount { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(FishId))]
        [InverseProperty(nameof(Nfish.ScientificPermitOutingCatches))]
        public virtual Nfish Fish { get; set; }
        [ForeignKey(nameof(ScientificPermitOutingId))]
        [InverseProperty("ScientificPermitOutingCatches")]
        public virtual ScientificPermitOuting ScientificPermitOuting { get; set; }
    }
}
