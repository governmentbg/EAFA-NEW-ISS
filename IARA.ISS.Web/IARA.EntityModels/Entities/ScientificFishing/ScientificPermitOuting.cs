// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Излети за научен риболов
    /// </summary>
    [Table("ScientificPermitOutings", Schema = "RNauR")]
    [Index(nameof(ScientificPermitId), Name = "IXFK_ScientificPermitOutings_ScientificPermitRegister")]
    public partial class ScientificPermitOuting
    {
        public ScientificPermitOuting()
        {
            ScientificPermitOutingCatches = new HashSet<ScientificPermitOutingCatch>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Резрешително за научен риболов
        /// </summary>
        [Column("ScientificPermitID")]
        public int ScientificPermitId { get; set; }
        /// <summary>
        /// Дата на излета
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime OutingDate { get; set; }
        /// <summary>
        /// Воден обект
        /// </summary>
        [Required]
        [StringLength(4000)]
        public string WaterAreaDesc { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(ScientificPermitId))]
        [InverseProperty(nameof(ScientificPermitRegister.ScientificPermitOutings))]
        public virtual ScientificPermitRegister ScientificPermit { get; set; }
        [InverseProperty(nameof(ScientificPermitOutingCatch.ScientificPermitOuting))]
        public virtual ICollection<ScientificPermitOutingCatch> ScientificPermitOutingCatches { get; set; }
    }
}