// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Параметри на справки 
    /// </summary>
    [Table("NReportParameters", Schema = "Rep")]
    [Index(nameof(Code), Name = "UK_Rep_QueryReportParameters", IsUnique = true)]
    public partial class NreportParameter
    {
        public NreportParameter()
        {
            ReportParameters = new HashSet<ReportParameter>();
        }

        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Код
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Code { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Name { get; set; }
        /// <summary>
        /// Описание на параметъра
        /// </summary>
        [StringLength(1000)]
        public string Description { get; set; }
        /// <summary>
        /// Тип на параметъра
        /// </summary>
        [Required]
        [StringLength(50)]
        public string DataType { get; set; }
        /// <summary>
        /// Стойност по подразбиране в справката
        /// </summary>
        [StringLength(4000)]
        public string DefaultValue { get; set; }
        /// <summary>
        /// Регулярен израз за ограничение на стойностите
        /// </summary>
        [StringLength(200)]
        public string Pattern { get; set; }
        /// <summary>
        /// Съобщение за грешка при невалидни данни
        /// </summary>
        [StringLength(200)]
        public string ErrorMessage { get; set; }
        /// <summary>
        /// SQL заявка за попълване на стойности в параметъра
        /// </summary>
        [Column("NomenclatureSQL")]
        public string NomenclatureSql { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [InverseProperty(nameof(ReportParameter.Parameter))]
        public virtual ICollection<ReportParameter> ReportParameters { get; set; }
    }
}