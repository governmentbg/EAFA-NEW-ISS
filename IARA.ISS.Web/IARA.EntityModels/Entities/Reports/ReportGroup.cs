// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Група справки
    /// </summary>
    [Table("ReportGroups", Schema = "Rep")]
    [Index(nameof(Name), Name = "UK_Rep_QueryReportGroups", IsUnique = true)]
    public partial class ReportGroup
    {
        public ReportGroup()
        {
            Reports = new HashSet<Report>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Name { get; set; }
        /// <summary>
        /// Описание
        /// </summary>
        [Required]
        [StringLength(4000)]
        public string Description { get; set; }
        /// <summary>
        /// Пореден номер в интерфейса
        /// </summary>
        public short OrderNum { get; set; }
        /// <summary>
        /// Тип група (SQL / Jasper / Check)
        /// </summary>
        [Required]
        [StringLength(20)]
        public string GroupType { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит (май е излишно тук)
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [InverseProperty(nameof(Report.ReportGroup))]
        public virtual ICollection<Report> Reports { get; set; }
    }
}