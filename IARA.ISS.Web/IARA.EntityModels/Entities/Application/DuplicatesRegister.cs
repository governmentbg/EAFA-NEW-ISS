// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Дубликати
    /// </summary>
    [Table("DuplicatesRegister", Schema = "Appl")]
    [Index(nameof(ApplicationId), Name = "IXFK_DuplicatesRegister_Applications")]
    [Index(nameof(BuyerId), Name = "IXFK_DuplicatesRegister_BuyerRegister")]
    [Index(nameof(RegisterApplicationId), Name = "IXFK_DuplicatesRegister_DuplicatesRegister")]
    [Index(nameof(FishermanId), Name = "IXFK_DuplicatesRegister_FishermenRegister")]
    [Index(nameof(SubmittedForLegalId), Name = "IXFK_DuplicatesRegister_Legals")]
    [Index(nameof(PermitLicenceId), Name = "IXFK_DuplicatesRegister_PermitLicensesRegister")]
    [Index(nameof(PermitId), Name = "IXFK_DuplicatesRegister_PermitRegister")]
    [Index(nameof(SubmittedForPersonId), Name = "IXFK_DuplicatesRegister_Persons")]
    public partial class DuplicatesRegister
    {
        public DuplicatesRegister()
        {
            DuplicatesRegisterFiles = new HashSet<DuplicatesRegisterFile>();
            InverseRegisterApplication = new HashSet<DuplicatesRegister>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Заявление
        /// </summary>
        [Column("ApplicationID")]
        public int ApplicationId { get; set; }
        [Required]
        [StringLength(50)]
        public string RecordType { get; set; }
        [Column("RegisterApplicationID")]
        public int? RegisterApplicationId { get; set; }
        /// <summary>
        /// Получател - ФЛ
        /// </summary>
        [Column("SubmittedForPersonID")]
        public int? SubmittedForPersonId { get; set; }
        /// <summary>
        /// Получател - ЮЛ
        /// </summary>
        [Column("SubmittedForLegalID")]
        public int? SubmittedForLegalId { get; set; }
        /// <summary>
        /// Причина
        /// </summary>
        [Required]
        [StringLength(4000)]
        public string Reason { get; set; }
        /// <summary>
        /// Купувач
        /// </summary>
        [Column("BuyerID")]
        public int? BuyerId { get; set; }
        /// <summary>
        /// РСР
        /// </summary>
        [Column("PermitID")]
        public int? PermitId { get; set; }
        /// <summary>
        /// УСР
        /// </summary>
        [Column("PermitLicenceID")]
        public int? PermitLicenceId { get; set; }
        /// <summary>
        /// Правоспособен рибар
        /// </summary>
        [Column("FishermanID")]
        public int? FishermanId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(ApplicationId))]
        [InverseProperty("DuplicatesRegisters")]
        public virtual Application Application { get; set; }
        [ForeignKey(nameof(BuyerId))]
        [InverseProperty(nameof(BuyerRegister.DuplicatesRegisters))]
        public virtual BuyerRegister Buyer { get; set; }
        [ForeignKey(nameof(FishermanId))]
        [InverseProperty(nameof(FishermenRegister.DuplicatesRegisters))]
        public virtual FishermenRegister Fisherman { get; set; }
        [ForeignKey(nameof(PermitId))]
        [InverseProperty(nameof(PermitRegister.DuplicatesRegisters))]
        public virtual PermitRegister Permit { get; set; }
        [ForeignKey(nameof(PermitLicenceId))]
        [InverseProperty(nameof(PermitLicensesRegister.DuplicatesRegisters))]
        public virtual PermitLicensesRegister PermitLicence { get; set; }
        [ForeignKey(nameof(RegisterApplicationId))]
        [InverseProperty(nameof(DuplicatesRegister.InverseRegisterApplication))]
        public virtual DuplicatesRegister RegisterApplication { get; set; }
        [ForeignKey(nameof(SubmittedForLegalId))]
        [InverseProperty(nameof(Legal.DuplicatesRegisters))]
        public virtual Legal SubmittedForLegal { get; set; }
        [ForeignKey(nameof(SubmittedForPersonId))]
        [InverseProperty(nameof(Person.DuplicatesRegisters))]
        public virtual Person SubmittedForPerson { get; set; }
        [InverseProperty(nameof(DuplicatesRegisterFile.Record))]
        public virtual ICollection<DuplicatesRegisterFile> DuplicatesRegisterFiles { get; set; }
        [InverseProperty(nameof(DuplicatesRegister.RegisterApplication))]
        public virtual ICollection<DuplicatesRegister> InverseRegisterApplication { get; set; }
    }
}