// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Мапинг за кое заявление коя роля на подаващия заявление спрямо получателя е позволена
    /// </summary>
    [Table("MapApplicationTypeSubmittedByRoles", Schema = "Appl")]
    [Index(nameof(ApplicationTypeId), Name = "IXFK_MapApplicationTypeSubmittedByRoles_NApplicationTypes")]
    [Index(nameof(SubmittedByRoleId), Name = "IXFK_MapApplicationTypeSubmittedByRoles_NSubmittedByRoles")]
    [Index(nameof(ApplicationTypeId), nameof(SubmittedByRoleId), Name = "UK_Appl_MapApplicationTypeSubmittedByRoles", IsUnique = true)]
    public partial class MapApplicationTypeSubmittedByRole
    {         public MapApplicationTypeSubmittedByRole()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Тип заявление
        /// </summary>
        [Column("ApplicationTypeID")]
        public int ApplicationTypeId { get; set; }
        /// <summary>
        /// Роля на подаващ
        /// </summary>
        [Column("SubmittedByRoleID")]
        public int SubmittedByRoleId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(ApplicationTypeId))]
        [InverseProperty(nameof(NapplicationType.MapApplicationTypeSubmittedByRoles))]
        public virtual NapplicationType ApplicationType { get; set; }
        [ForeignKey(nameof(SubmittedByRoleId))]
        [InverseProperty(nameof(NsubmittedByRole.MapApplicationTypeSubmittedByRoles))]
        public virtual NsubmittedByRole SubmittedByRole { get; set; }
    }
}
