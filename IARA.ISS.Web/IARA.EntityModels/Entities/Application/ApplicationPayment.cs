// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Плащане на заявление
    /// </summary>
    [Table("ApplicationPayments", Schema = "Appl")]
    [Index(nameof(ApplicationId), Name = "IXFK_ApplicationPayments_Applications")]
    [Index(nameof(PaymentStatusId), Name = "IXFK_ApplicationPayments_NPaymentStatuses")]
    [Index(nameof(PaymentTypeId), Name = "IXFK_ApplicationPayments_NPaymentTypes")]
    [Index(nameof(ApplicationId), Name = "UK_Appl_ApplicationPayments", IsUnique = true)]
    public partial class ApplicationPayment
    {
        public ApplicationPayment()
        {
            ApplicationPaymentTariffs = new HashSet<ApplicationPaymentTariff>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Заявление
        /// </summary>
        [Column("ApplicationID")]
        public int ApplicationId { get; set; }
        /// <summary>
        /// Тип на плащането (Касово, ePay, PayEGov, ePOS)
        /// </summary>
        [Column("PaymentTypeID")]
        public int? PaymentTypeId { get; set; }
        /// <summary>
        /// Дата и час на плащане
        /// </summary>
        public DateTime? PaymentDateTime { get; set; }
        /// <summary>
        /// Състояние на плащане (Unpaid, PaymentFail, PaidOK, NotNeeded)
        /// </summary>
        [Column("PaymentStatusID")]
        public int PaymentStatusId { get; set; }
        /// <summary>
        /// Обща сума на плащането
        /// </summary>
        [Column("TotalAmountBGN")]
        public decimal TotalAmountBgn { get; set; }
        /// <summary>
        /// Референтен номер на плащането във външната система за плащания
        /// </summary>
        [StringLength(50)]
        public string PaymentRefNum { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(ApplicationId))]
        [InverseProperty("ApplicationPayment")]
        public virtual Application Application { get; set; }
        [ForeignKey(nameof(PaymentStatusId))]
        [InverseProperty(nameof(NpaymentStatus.ApplicationPayments))]
        public virtual NpaymentStatus PaymentStatus { get; set; }
        [ForeignKey(nameof(PaymentTypeId))]
        [InverseProperty(nameof(NpaymentType.ApplicationPayments))]
        public virtual NpaymentType PaymentType { get; set; }
        [InverseProperty(nameof(ApplicationPaymentTariff.Payment))]
        public virtual ICollection<ApplicationPaymentTariff> ApplicationPaymentTariffs { get; set; }
    }
}