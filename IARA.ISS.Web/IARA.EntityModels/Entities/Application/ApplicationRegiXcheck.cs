// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Проверки на заявление срещу RegiX
    /// </summary>
    [Table("ApplicationRegiXChecks", Schema = "Appl")]
    [Index(nameof(ApplicationChangeHistoryId), Name = "IXFK_ApplicationRegiXChecks_ApplicationChangeHistory")]
    [Index(nameof(ApplicationId), Name = "IXFK_ApplicationRegiXChecks_Applications")]
    [Index(nameof(ApplicationId), nameof(WebServiceName), nameof(ApplicationChangeHistoryId), nameof(AdditianalIdentifier), nameof(CheckType), Name = "UK_Appl_ApplicationRegiXChecks", IsUnique = true)]
    public partial class ApplicationRegiXcheck
    {         public ApplicationRegiXcheck()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Заявление
        /// </summary>
        [Column("ApplicationID")]
        public int ApplicationId { get; set; }
        /// <summary>
        /// Конкретна стъпка от историята на промение на заявлението
        /// </summary>
        [Column("ApplicationChangeHistoryID")]
        public int ApplicationChangeHistoryId { get; set; }
        /// <summary>
        /// Име на извиканата услуга в RegiX (пр. TechnoLogica.RegiX.GraoNBDAdapter.APIService.INBDAPI.PersonDataSearch)
        /// </summary>
        [Required]
        [StringLength(500)]
        public string WebServiceName { get; set; }
        /// <summary>
        /// Идентификатор на лице, подаден към RegiX
        /// </summary>
        [Required]
        [StringLength(50)]
        public string AdditianalIdentifier { get; set; }
        /// <summary>
        /// Вид на проверяваното лице:
        /// AgentPerson = 1 &lt;&lt; 1,
        /// AgentAddress = AgentPerson | 1,
        /// ChangeLegal = 1 &lt;&lt; 2,
        /// ChangePerson = 1 &lt;&lt; 3,
        /// ChangeAddress = ChangePerson | 1,
        /// HolderLegal = 1 &lt;&lt; 4,
        /// HolderPerson = 1 &lt;&lt; 5,
        /// HolderAddress = HolderPerson | 1,
        /// Legal = 1 &lt;&lt; 6,
        /// LegalAuthorizedPerson = 1 &lt;&lt; 7,
        /// LessorLegal = 1 &lt;&lt; 8,
        /// LessorPerson = 1 &lt;&lt; 9,
        /// LessorAddress = LessorLegal | 1,
        /// OrganizerPerson = 1 &lt;&lt; 10,
        /// OrganizerAddress = OrganizerPerson | 1,
        /// OwnerLegal = 1 &lt;&lt; 11,
        /// OwnerPerson = 1 &lt;&lt; 12,
        /// OwnerAddress = OwnerLegal | 1,
        /// ReceiverPerson = 1 &lt;&lt; 13,
        /// ReceiverAddress = ReceiverPerson | 1,
        /// RepresentativePerson = 1 &lt;&lt; 14,
        /// RepresentativeAddress = RepresentativePerson | 1,
        /// RequesterPerson = 1 &lt;&lt; 15,
        /// RequesterAddress = RequesterPerson | 1,
        /// Ship = 1 &lt;&lt; 16,
        /// SubmittedByPerson = 1 &lt;&lt; 17,
        /// SubmittedByAddress = SubmittedByPerson | 1,
        /// SubmittedForLegal = 1 &lt;&lt; 18,
        /// SubmittedForPerson = 1 &lt;&lt; 19,
        /// SubmittedForAddress = SubmittedForPerson | 1,
        /// DisabledPerson = 1 &lt;&lt; 20,
        /// </summary>
        public int CheckType { get; set; }
        /// <summary>
        /// Адрес на RegiX ядрото
        /// </summary>
        [Required]
        [StringLength(500)]
        public string RemoteAddress { get; set; }
        /// <summary>
        /// Дата и час на подаване на заявката
        /// </summary>
        public DateTime RequestDateTime { get; set; }
        /// <summary>
        /// Съдържание на заявката
        /// </summary>
        [Required]
        public string RequestContent { get; set; }
        /// <summary>
        /// Статус на отговора (Cache, OK, Error)
        /// </summary>
        [Required]
        [StringLength(50)]
        public string ResponseStatus { get; set; }
        /// <summary>
        /// Дата и час на отговора
        /// </summary>
        public DateTime? ResponseDateTime { get; set; }
        /// <summary>
        /// Съдържание на отговора
        /// </summary>
        public string ResponseContent { get; set; }
        /// <summary>
        /// Съдържание на данните в нашата система, което сравняваме с данните в RegiX
        /// </summary>
        public string ExpectedResponseContent { get; set; }
        /// <summary>
        /// Флаг дали са намерени грешки (NONE/WARN/ERROR)
        /// </summary>
        [Required]
        [StringLength(50)]
        public string ErrorLevel { get; set; }
        /// <summary>
        /// Описание на намерените грешки
        /// </summary>
        [StringLength(4000)]
        public string ErrorDescription { get; set; }
        /// <summary>
        /// Брой направени опити
        /// </summary>
        public short Attempts { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(ApplicationId))]
        [InverseProperty("ApplicationRegiXchecks")]
        public virtual Application Application { get; set; }
        [ForeignKey(nameof(ApplicationChangeHistoryId))]
        [InverseProperty("ApplicationRegiXchecks")]
        public virtual ApplicationChangeHistory ApplicationChangeHistory { get; set; }
    }
}
