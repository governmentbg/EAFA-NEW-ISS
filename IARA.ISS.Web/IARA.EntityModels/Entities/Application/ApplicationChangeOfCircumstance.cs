// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Заявления за промяна в обстоятелствата или прекратяване
    /// </summary>
    [Table("ApplicationChangeOfCircumstances", Schema = "Appl")]
    [Index(nameof(AddressId), Name = "IXFK_ApplChangeOfCirc_Addresses")]
    [Index(nameof(ApplicationId), Name = "IXFK_ApplChangeOfCirc_Applications")]
    [Index(nameof(AquacultureFacilityId), Name = "IXFK_ApplChangeOfCirc_AquacultureFacilityRegister")]
    [Index(nameof(LegalId), Name = "IXFK_ApplChangeOfCirc_Legals")]
    [Index(nameof(ChangeOfCircumstancesTypeId), Name = "IXFK_ApplChangeOfCirc_NChangeOfCircumstancesTypes")]
    [Index(nameof(PermitLicenceId), Name = "IXFK_ApplChangeOfCirc_PermitLicensesRegister")]
    [Index(nameof(PermitId), Name = "IXFK_ApplChangeOfCirc_PermitRegister")]
    [Index(nameof(PersonId), Name = "IXFK_ApplChangeOfCirc_Persons")]
    [Index(nameof(ShipId), Name = "IXFK_ApplChangeOfCirc_ShipRegister")]
    [Index(nameof(UserId), Name = "IXFK_ApplChangeOfCirc_Users")]
    [Index(nameof(BuyerId), Name = "IXFK_ApplicationChangeOfCircumstances_BuyerRegister")]
    public partial class ApplicationChangeOfCircumstance
    {         public ApplicationChangeOfCircumstance()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Заявление
        /// </summary>
        [Column("ApplicationID")]
        public int ApplicationId { get; set; }
        /// <summary>
        /// Вид на промяната
        /// </summary>
        [Column("ChangeOfCircumstancesTypeID")]
        public int ChangeOfCircumstancesTypeId { get; set; }
        /// <summary>
        /// Дата и час на събитието
        /// </summary>
        public DateTime EventDateTime { get; set; }
        /// <summary>
        /// Описание на заявлението за промяна
        /// </summary>
        public string ChangeDescription { get; set; }
        /// <summary>
        /// Данни за физическо лице за промяна
        /// </summary>
        [Column("PersonID")]
        public int? PersonId { get; set; }
        /// <summary>
        /// Данни за юридическо лице за промяна
        /// </summary>
        [Column("LegalID")]
        public int? LegalId { get; set; }
        /// <summary>
        /// Данни за потребител за промяна
        /// </summary>
        [Column("UserID")]
        public int? UserId { get; set; }
        /// <summary>
        /// Данни за адрес за промяна
        /// </summary>
        [Column("AddressID")]
        public int? AddressId { get; set; }
        /// <summary>
        /// Данни за кораб за промяна
        /// </summary>
        [Column("ShipID")]
        public int? ShipId { get; set; }
        /// <summary>
        /// Разрешително за стопански риболов за промяна
        /// </summary>
        [Column("PermitID")]
        public int? PermitId { get; set; }
        /// <summary>
        /// Удостоверение за стопански риболов за промяна
        /// </summary>
        [Column("PermitLicenceID")]
        public int? PermitLicenceId { get; set; }
        /// <summary>
        /// Аквакултурно стопанство за промяна
        /// </summary>
        [Column("AquacultureFacilityID")]
        public int? AquacultureFacilityId { get; set; }
        /// <summary>
        /// Купувач/ЦПП, за който се отнася промяната
        /// </summary>
        [Column("BuyerID")]
        public int? BuyerId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AddressId))]
        [InverseProperty("ApplicationChangeOfCircumstances")]
        public virtual Address Address { get; set; }
        [ForeignKey(nameof(ApplicationId))]
        [InverseProperty("ApplicationChangeOfCircumstances")]
        public virtual Application Application { get; set; }
        [ForeignKey(nameof(AquacultureFacilityId))]
        [InverseProperty(nameof(AquacultureFacilityRegister.ApplicationChangeOfCircumstances))]
        public virtual AquacultureFacilityRegister AquacultureFacility { get; set; }
        [ForeignKey(nameof(BuyerId))]
        [InverseProperty(nameof(BuyerRegister.ApplicationChangeOfCircumstances))]
        public virtual BuyerRegister Buyer { get; set; }
        [ForeignKey(nameof(ChangeOfCircumstancesTypeId))]
        [InverseProperty(nameof(NchangeOfCircumstancesType.ApplicationChangeOfCircumstances))]
        public virtual NchangeOfCircumstancesType ChangeOfCircumstancesType { get; set; }
        [ForeignKey(nameof(LegalId))]
        [InverseProperty("ApplicationChangeOfCircumstances")]
        public virtual Legal Legal { get; set; }
        [ForeignKey(nameof(PermitId))]
        [InverseProperty(nameof(PermitRegister.ApplicationChangeOfCircumstances))]
        public virtual PermitRegister Permit { get; set; }
        [ForeignKey(nameof(PermitLicenceId))]
        [InverseProperty(nameof(PermitLicensesRegister.ApplicationChangeOfCircumstances))]
        public virtual PermitLicensesRegister PermitLicence { get; set; }
        [ForeignKey(nameof(PersonId))]
        [InverseProperty("ApplicationChangeOfCircumstances")]
        public virtual Person Person { get; set; }
        [ForeignKey(nameof(ShipId))]
        [InverseProperty(nameof(ShipRegister.ApplicationChangeOfCircumstances))]
        public virtual ShipRegister Ship { get; set; }
        [ForeignKey(nameof(UserId))]
        [InverseProperty("ApplicationChangeOfCircumstances")]
        public virtual User User { get; set; }
    }
}
