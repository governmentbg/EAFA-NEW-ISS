// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Детайли за пълномощно
    /// </summary>
    [Table("LetterOfAttorney", Schema = "Appl")]
    public partial class LetterOfAttorney
    {
        public LetterOfAttorney()
        {
            Applications = new HashSet<Application>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Номер пълномощно на представител
        /// </summary>
        [Required]
        [StringLength(50)]
        public string LetterNum { get; set; }
        /// <summary>
        /// Пълномощно валидно от
        /// </summary>
        public DateTime LetterValidFrom { get; set; }
        /// <summary>
        /// Пълномощно валидно до
        /// </summary>
        public DateTime? LetterValidTo { get; set; }
        /// <summary>
        /// Флаг дали пълномощното е безсрочно
        /// </summary>
        public bool IsUnlimited { get; set; }
        /// <summary>
        /// Нотариус на пълномощно
        /// </summary>
        [StringLength(500)]
        public string NotaryNames { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [InverseProperty(nameof(Application.SubmittedByLetterOfAttorney))]
        public virtual ICollection<Application> Applications { get; set; }
    }
}