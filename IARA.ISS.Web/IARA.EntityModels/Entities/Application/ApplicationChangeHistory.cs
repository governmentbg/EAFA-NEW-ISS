// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// История на промени на заявления
    /// </summary>
    [Table("ApplicationChangeHistory", Schema = "Appl")]
    [Index(nameof(ApplicationStatusId), Name = "IXFK_ApplicationChangeHistory_NApplicationStatuses")]
    [Index(nameof(PaymentStatusId), Name = "IXFK_ApplicationChangeHistory_NPaymentStatuses")]
    [Index(nameof(TerritoryUnitId), Name = "IXFK_ApplicationChangeHistory_NTerritoryUnits")]
    [Index(nameof(AssignedUserId), Name = "IXFK_ApplicationChangeHistory_Users")]
    [Index(nameof(ModifiedByUserId), Name = "IXFK_ApplicationChangeHistory_Users_ModifiedBy")]
    [Index(nameof(ApplicationId), Name = "IXFK_ApplicationHistory_Applications")]
    [Index(nameof(ApplicationId), nameof(ValidTo), Name = "UK_Appl_ApplicationChangeHistory", IsUnique = true)]
    public partial class ApplicationChangeHistory
    {
        public ApplicationChangeHistory()
        {
            ApplicationChangeHistoryFiles = new HashSet<ApplicationChangeHistoryFile>();
            ApplicationRegiXchecks = new HashSet<ApplicationRegiXcheck>();
        }

        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("ApplicationID")]
        public int ApplicationId { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// Статус
        /// </summary>
        [Column("ApplicationStatusID")]
        public int ApplicationStatusId { get; set; }
        /// <summary>
        /// Основание за промяна на статуса
        /// </summary>
        [StringLength(4000)]
        public string StatusReason { get; set; }
        /// <summary>
        /// Потребител, направил промяната в заявлението (може да е служител на ИАРА или титуляр на заявлението )
        /// </summary>
        [Column("ModifiedByUserID")]
        public int ModifiedByUserId { get; set; }
        /// <summary>
        /// Дата и час на промяната
        /// </summary>
        public DateTime? ModifiedDateTime { get; set; }
        /// <summary>
        /// Служител, назначен за обработка на заявлението
        /// </summary>
        [Column("AssignedUserID")]
        public int? AssignedUserId { get; set; }
        /// <summary>
        /// Териториална единица (взема се от AssignedUserID)
        /// </summary>
        [Column("TerritoryUnitID")]
        public int? TerritoryUnitId { get; set; }
        /// <summary>
        /// Състояние на плащане (NotNeeded, Unpaid, PaymentFail, PaidOK)
        /// </summary>
        [Column("PaymentStatusID")]
        public int PaymentStatusId { get; set; }
        /// <summary>
        /// Съдържание на заявлението в JSON формат, към момента на редакцията
        /// </summary>
        public string ApplicationDraftContents { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(ApplicationId))]
        [InverseProperty("ApplicationChangeHistories")]
        public virtual Application Application { get; set; }
        [ForeignKey(nameof(ApplicationStatusId))]
        [InverseProperty(nameof(NapplicationStatus.ApplicationChangeHistories))]
        public virtual NapplicationStatus ApplicationStatus { get; set; }
        [ForeignKey(nameof(AssignedUserId))]
        [InverseProperty(nameof(User.ApplicationChangeHistoryAssignedUsers))]
        public virtual User AssignedUser { get; set; }
        [ForeignKey(nameof(ModifiedByUserId))]
        [InverseProperty(nameof(User.ApplicationChangeHistoryModifiedByUsers))]
        public virtual User ModifiedByUser { get; set; }
        [ForeignKey(nameof(PaymentStatusId))]
        [InverseProperty(nameof(NpaymentStatus.ApplicationChangeHistories))]
        public virtual NpaymentStatus PaymentStatus { get; set; }
        [ForeignKey(nameof(TerritoryUnitId))]
        [InverseProperty(nameof(NterritoryUnit.ApplicationChangeHistories))]
        public virtual NterritoryUnit TerritoryUnit { get; set; }
        [InverseProperty(nameof(ApplicationChangeHistoryFile.Record))]
        public virtual ICollection<ApplicationChangeHistoryFile> ApplicationChangeHistoryFiles { get; set; }
        [InverseProperty(nameof(ApplicationRegiXcheck.ApplicationChangeHistory))]
        public virtual ICollection<ApplicationRegiXcheck> ApplicationRegiXchecks { get; set; }
    }
}