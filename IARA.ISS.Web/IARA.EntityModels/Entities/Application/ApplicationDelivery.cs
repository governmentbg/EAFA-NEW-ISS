// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Детайли за начин на връчване на заявление
    /// </summary>
    [Table("ApplicationDelivery", Schema = "Appl")]
    [Index(nameof(AddressId), Name = "IXFK_ApplicationDelivery_Addresses")]
    [Index(nameof(EmailId), Name = "IXFK_ApplicationDelivery_EmailAddresses")]
    [Index(nameof(DeliveryTypeId), Name = "IXFK_ApplicationDelivery_NDeliveryTypes")]
    [Index(nameof(TerritoryUnitId), Name = "IXFK_ApplicationDelivery_NTerritoryUnits")]
    public partial class ApplicationDelivery
    {
        public ApplicationDelivery()
        {
            Applications = new HashSet<Application>();
            InspectionRegisters = new HashSet<InspectionRegister>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Начин на връчване (Personal/eDelivery/ByMail)
        /// </summary>
        [Column("DeliveryTypeID")]
        public int DeliveryTypeId { get; set; }
        /// <summary>
        /// Флаг дали е връчено
        /// </summary>
        public bool IsDelivered { get; set; }
        /// <summary>
        /// Дата на изпращане (по пощата)
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? SentDate { get; set; }
        /// <summary>
        /// Дата на връчване
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? DeliveryDate { get; set; }
        /// <summary>
        /// Номер за референция (обратна разписка или eDelivery идентификатор)
        /// </summary>
        [StringLength(500)]
        public string ReferenceNum { get; set; }
        /// <summary>
        /// Адрес за доставка
        /// </summary>
        [Column("AddressID")]
        public int? AddressId { get; set; }
        /// <summary>
        /// Email за доставка - само за eDelivery или изпращане по пощата
        /// </summary>
        [Column("EmailID")]
        public int? EmailId { get; set; }
        /// <summary>
        /// Териториално звено за получаване
        /// </summary>
        [Column("TerritoryUnitID")]
        public int? TerritoryUnitId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AddressId))]
        [InverseProperty("ApplicationDeliveries")]
        public virtual Address Address { get; set; }
        [ForeignKey(nameof(DeliveryTypeId))]
        [InverseProperty(nameof(NdeliveryType.ApplicationDeliveries))]
        public virtual NdeliveryType DeliveryType { get; set; }
        [ForeignKey(nameof(EmailId))]
        [InverseProperty(nameof(EmailAddress.ApplicationDeliveries))]
        public virtual EmailAddress Email { get; set; }
        [ForeignKey(nameof(TerritoryUnitId))]
        [InverseProperty(nameof(NterritoryUnit.ApplicationDeliveries))]
        public virtual NterritoryUnit TerritoryUnit { get; set; }
        [InverseProperty(nameof(Application.Delivery))]
        public virtual ICollection<Application> Applications { get; set; }
        [InverseProperty(nameof(InspectionRegister.Delivery))]
        public virtual ICollection<InspectionRegister> InspectionRegisters { get; set; }
    }
}