// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Тарифа на ИАРА
    /// </summary>
    [Table("NTariff", Schema = "Appl")]
    [Index(nameof(Code), nameof(ValidTo), Name = "UK_Appl_NTariff", IsUnique = true)]
    public partial class Ntariff
    {
        public Ntariff()
        {
            ApplicationPaymentTariffs = new HashSet<ApplicationPaymentTariff>();
            MapTariffFishes = new HashSet<MapTariffFish>();
            MapTariffFishingGears = new HashSet<MapTariffFishingGear>();
            NapplicationTypeTariffs = new HashSet<NapplicationTypeTariff>();
        }

        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Код
        /// </summary>
        [Required]
        [StringLength(50)]
        public string Code { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Name { get; set; }
        /// <summary>
        /// Описание
        /// </summary>
        [StringLength(1000)]
        public string Description { get; set; }
        /// <summary>
        /// Цена
        /// </summary>
        public decimal Price { get; set; }
        /// <summary>
        /// Правно основание за таксата
        /// </summary>
        [StringLength(100)]
        public string BasedOnPlea { get; set; }
        /// <summary>
        /// Флаг дали тази тарифа се изчислява според параметри в заявлението (true) или винаги се прилага (false)
        /// </summary>
        public bool IsCalculated { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [InverseProperty(nameof(ApplicationPaymentTariff.Tariff))]
        public virtual ICollection<ApplicationPaymentTariff> ApplicationPaymentTariffs { get; set; }
        [InverseProperty(nameof(MapTariffFish.Tariff))]
        public virtual ICollection<MapTariffFish> MapTariffFishes { get; set; }
        [InverseProperty(nameof(MapTariffFishingGear.Tariff))]
        public virtual ICollection<MapTariffFishingGear> MapTariffFishingGears { get; set; }
        [InverseProperty(nameof(NapplicationTypeTariff.Tariff))]
        public virtual ICollection<NapplicationTypeTariff> NapplicationTypeTariffs { get; set; }
    }
}