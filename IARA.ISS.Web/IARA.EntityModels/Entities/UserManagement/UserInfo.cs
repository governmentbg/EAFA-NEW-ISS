// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Допълнителна информация за потребители
    /// </summary>
    [Table("UserInfos", Schema = "UsrMgmt")]
    [Index(nameof(DepartmentId), Name = "IXFK_UserInfos_NDepartments")]
    [Index(nameof(SectorId), Name = "IXFK_UserInfos_NSectors")]
    [Index(nameof(TerritoryUnitId), Name = "IXFK_UserInfos_NTerritoryUnits")]
    [Index(nameof(UserId), Name = "IXFK_UserInfos_Users")]
    public partial class UserInfo
    {
        /// <summary>
        /// Потребител
        /// </summary>
        [Key]
        [Column("UserID")]
        public int UserId { get; set; }
        /// <summary>
        /// Дата на регистрация на потребителя
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime RegistrationDate { get; set; }
        /// <summary>
        /// Флаг дали достъпа на потребителя до системата е спрян (акаунта е заключен)
        /// </summary>
        public bool IsLocked { get; set; }
        /// <summary>
        /// Дата на последен успешен опит за вход
        /// </summary>
        public DateTime? LastLoginDate { get; set; }
        public DateTime? LockEndDateTime { get; set; }
        /// <summary>
        /// Брой неуспешни опити за вход
        /// </summary>
        public short FailedLoginCount { get; set; }
        /// <summary>
        /// Последен неуспешен опит за вход
        /// </summary>
        public DateTime? LastFailedLoginAttempt { get; set; }
        /// <summary>
        /// Флаг дали потребителят трябва да смени паролата си за вход
        /// </summary>
        public bool UserMustChangePassword { get; set; }
        /// <summary>
        /// Флаг дали целия профил на user-a трябва да се въведе наново - вкл. смяна на email, ЕГН и т.н.
        /// </summary>
        public bool UserMustResetProfileData { get; set; }
        /// <summary>
        /// Флаг дали мейл адреса на потребителя е потвърден
        /// </summary>
        public bool IsEmailConfirmed { get; set; }
        /// <summary>
        /// GUID за потвръждение на мейла
        /// </summary>
        [StringLength(100)]
        public string ConfirmEmailKey { get; set; }
        /// <summary>
        /// Краен срок за потвърждаване на мейла
        /// </summary>
        public DateTime? EmailKeyValidTo { get; set; }
        /// <summary>
        /// Сектор в ИАРА (за вътрешни потребители)
        /// </summary>
        [Column("SectorID")]
        public int? SectorId { get; set; }
        /// <summary>
        /// Отдел в ИАРА (за вътрешни потребители)
        /// </summary>
        [Column("DepartmentID")]
        public int? DepartmentId { get; set; }
        /// <summary>
        /// Териториално звено (за вътрешни потребители)
        /// </summary>
        [Column("TerritoryUnitID")]
        public int? TerritoryUnitId { get; set; }
        /// <summary>
        /// Длъжност
        /// </summary>
        [StringLength(500)]
        public string Position { get; set; }
        /// <summary>
        /// Тип абонамент за новини през мобилното приложение (None/Districts/ALL)
        /// </summary>
        [Required]
        [StringLength(10)]
        public string NewsSubscriptionType { get; set; }
        /// <summary>
        /// Флаг дали потвърждава, че е запознат със ЗРА
        /// </summary>
        [Required]
        public bool? HasFishLawConfirmation { get; set; }
        /// <summary>
        /// Флаг дали потвърждава, че е запознат с общите условия
        /// </summary>
        [Required]
        public bool? HasTermsAgreementConfirmation { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(DepartmentId))]
        [InverseProperty(nameof(Ndepartment.UserInfos))]
        public virtual Ndepartment Department { get; set; }
        [ForeignKey(nameof(SectorId))]
        [InverseProperty(nameof(Nsector.UserInfos))]
        public virtual Nsector Sector { get; set; }
        [ForeignKey(nameof(TerritoryUnitId))]
        [InverseProperty(nameof(NterritoryUnit.UserInfos))]
        public virtual NterritoryUnit TerritoryUnit { get; set; }
        [ForeignKey(nameof(UserId))]
        [InverseProperty("UserInfo")]
        public virtual User User { get; set; }
    }
}