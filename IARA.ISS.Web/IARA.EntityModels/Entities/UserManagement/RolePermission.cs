// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Права за достъп за роля
    /// </summary>
    [Table("RolePermissions", Schema = "UsrMgmt")]
    [Index(nameof(PermissionId), Name = "IXFK_UsrMgmt_RolePermissions_UsrMgmt_Permissions")]
    [Index(nameof(RoleId), Name = "IXFK_UsrMgmt_RolePermissions_UsrMgmt_Roles")]
    public partial class RolePermission
    {         public RolePermission()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Роля
        /// </summary>
        [Key]
        [Column("RoleID")]
        public int RoleId { get; set; }
        /// <summary>
        /// Право за достъп
        /// </summary>
        [Key]
        [Column("PermissionID")]
        public int PermissionId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(PermissionId))]
        [InverseProperty(nameof(Npermission.RolePermissions))]
        public virtual Npermission Permission { get; set; }
        [ForeignKey(nameof(RoleId))]
        [InverseProperty("RolePermissions")]
        public virtual Role Role { get; set; }
    }
}
