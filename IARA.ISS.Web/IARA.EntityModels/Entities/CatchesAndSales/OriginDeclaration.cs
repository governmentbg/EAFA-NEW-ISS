// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Декларации за произход
    /// </summary>
    [Table("OriginDeclarations", Schema = "CatchSales")]
    [Index(nameof(CreatedBy), nameof(UpdatedBy), Name = "IDX_CatchSales_OriginDeclarations_Migration")]
    [Index(nameof(LogBookPageId), Name = "IXFK_CatchSales_OriginDeclarations_CatchSales_LogBookPages")]
    [Index(nameof(LogBookPageId), Name = "UK_CatchSales_OriginDeclarations", IsUnique = true)]
    public partial class OriginDeclaration
    {
        public OriginDeclaration()
        {
            AdmissionLogBookPages = new HashSet<AdmissionLogBookPage>();
            FirstSaleLogBookPages = new HashSet<FirstSaleLogBookPage>();
            OriginDeclarationFishes = new HashSet<OriginDeclarationFish>();
            TransportationLogBookPages = new HashSet<TransportationLogBookPage>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("LogBookPageID")]
        public int LogBookPageId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(4000)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(LogBookPageId))]
        [InverseProperty(nameof(ShipLogBookPage.OriginDeclaration))]
        public virtual ShipLogBookPage LogBookPage { get; set; }
        [InverseProperty(nameof(AdmissionLogBookPage.OriginDeclaration))]
        public virtual ICollection<AdmissionLogBookPage> AdmissionLogBookPages { get; set; }
        [InverseProperty(nameof(FirstSaleLogBookPage.OriginDeclaration))]
        public virtual ICollection<FirstSaleLogBookPage> FirstSaleLogBookPages { get; set; }
        [InverseProperty(nameof(OriginDeclarationFish.OriginDeclaration))]
        public virtual ICollection<OriginDeclarationFish> OriginDeclarationFishes { get; set; }
        [InverseProperty(nameof(TransportationLogBookPage.OriginDeclaration))]
        public virtual ICollection<TransportationLogBookPage> TransportationLogBookPages { get; set; }
    }
}