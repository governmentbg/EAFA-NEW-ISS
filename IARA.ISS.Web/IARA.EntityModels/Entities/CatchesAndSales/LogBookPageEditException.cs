// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Изключения от правилата за редактиране на страници от дневник (риболовен, аквакултурни, приемане, транспорт, продажба)
    /// </summary>
    [Table("LogBookPageEditExceptions", Schema = "CatchSales")]
    [Index("LogBookId", Name = "IXFK_LogBookPageEditExceptions_LogBooks")]
    [Index("LogBookTypeId", Name = "IXFK_LogBookPageEditExceptions_NLogBookTypes")]
    [Index("UserId", Name = "IXFK_LogBookPageEditExceptions_Users")]
    [Index("UserId", "LogBookTypeId", "LogBookId", "ExceptionActiveFrom", Name = "UK_CatchSales_LogBookPageEditExceptions", IsUnique = true)]
    public partial class LogBookPageEditException
    {         public LogBookPageEditException()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// За кой потребител (ако е null = всички)
        /// </summary>
        [Column("UserID")]
        public int? UserId { get; set; }
        /// <summary>
        /// За кой тип дневник (ако е null = всички)
        /// </summary>
        [Column("LogBookTypeID")]
        public int? LogBookTypeId { get; set; }
        /// <summary>
        /// За кой конкретен дневник (ако е null = всички)
        /// </summary>
        [Column("LogBookID")]
        public int? LogBookId { get; set; }
        /// <summary>
        /// Начална дата на валидност на правата за редакция
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime ExceptionActiveFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на правата за редакция
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime ExceptionActiveTo { get; set; }
        /// <summary>
        /// Начална дата на страници за редактиране
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime EditPageDateFrom { get; set; }
        /// <summary>
        /// Крайна дата на страници за редактиране
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime EditPageDateTo { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey("LogBookId")]
        [InverseProperty("LogBookPageEditExceptions")]
        public virtual LogBook LogBook { get; set; }
        [ForeignKey("LogBookTypeId")]
        [InverseProperty("LogBookPageEditExceptions")]
        public virtual NlogBookType LogBookType { get; set; }
        [ForeignKey("UserId")]
        [InverseProperty("LogBookPageEditExceptions")]
        public virtual User User { get; set; }
    }
}
