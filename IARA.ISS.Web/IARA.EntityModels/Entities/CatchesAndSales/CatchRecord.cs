// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Данни за улов
    /// </summary>
    [Table("CatchRecords", Schema = "CatchSales")]
    [Index(nameof(CreatedBy), nameof(UpdatedBy), Name = "IDX_CatchSales_CatchRecords_Migration")]
    [Index(nameof(TransboardFromShipId), Name = "IXFK_CatchRecords_ShipRegister")]
    [Index(nameof(LogBookPageId), Name = "IXFK_CatchSales_CatchRecords_CatchSales_LogBookPages")]
    [Index(nameof(LogBookPageId), nameof(GearEntryTime), Name = "UK_CatchSales_CatchRecords", IsUnique = true)]
    public partial class CatchRecord
    {
        public CatchRecord()
        {
            CatchRecordFishes = new HashSet<CatchRecordFish>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("LogBookPageID")]
        public int LogBookPageId { get; set; }
        /// <summary>
        /// Дълбочина
        /// </summary>
        public int? Depth { get; set; }
        /// <summary>
        /// Брой риболовни операции
        /// </summary>
        public int? CatchOperCount { get; set; }
        /// <summary>
        /// Дата и час на поставяне на уреда
        /// </summary>
        public DateTime GearEntryTime { get; set; }
        /// <summary>
        /// Дата и час на изтегляне на уреда
        /// </summary>
        public DateTime? GearExitTime { get; set; }
        /// <summary>
        /// Кораб от който е получен улова при трансбордиране
        /// </summary>
        [Column("TransboardFromShipID")]
        public int? TransboardFromShipId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(LogBookPageId))]
        [InverseProperty(nameof(ShipLogBookPage.CatchRecords))]
        public virtual ShipLogBookPage LogBookPage { get; set; }
        [ForeignKey(nameof(TransboardFromShipId))]
        [InverseProperty(nameof(ShipRegister.CatchRecords))]
        public virtual ShipRegister TransboardFromShip { get; set; }
        [InverseProperty(nameof(CatchRecordFish.CatchRecord))]
        public virtual ICollection<CatchRecordFish> CatchRecordFishes { get; set; }
    }
}