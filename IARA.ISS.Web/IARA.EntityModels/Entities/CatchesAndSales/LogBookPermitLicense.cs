// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// История даден риболовен дневник към кое удостоверение е бил в определен период от време и от коя до коя страница.
    /// </summary>
    [Table("LogBookPermitLicenses", Schema = "CatchSales")]
    [Index(nameof(CreatedBy), nameof(UpdatedBy), Name = "IDX_CatchSales_LogBookPermitLicenses_Migration")]
    [Index(nameof(LogBookId), Name = "IXFK_LogBookPermitLicense_LogBooks")]
    [Index(nameof(PermitLicenseRegisterId), Name = "IXFK_LogBookPermitLicense_PermitLicensesRegister")]
    [Index(nameof(LogBookId), nameof(PermitLicenseRegisterId), nameof(LogBookValidTo), Name = "UK_CatchSales_LogBookPermitLicenses", IsUnique = true)]
    public partial class LogBookPermitLicense
    {
        public LogBookPermitLicense()
        {
            AdmissionLogBookPages = new HashSet<AdmissionLogBookPage>();
            ShipLogBookPages = new HashSet<ShipLogBookPage>();
            TransportationLogBookPages = new HashSet<TransportationLogBookPage>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Дневник
        /// </summary>
        [Column("LogBookID")]
        public int LogBookId { get; set; }
        /// <summary>
        /// Удостоверение
        /// </summary>
        [Column("PermitLicenseRegisterID")]
        public int PermitLicenseRegisterId { get; set; }
        /// <summary>
        /// Начална страница за съответното удостоверение
        /// </summary>
        public long? StartPageNum { get; set; }
        /// <summary>
        /// Крайна страница за съответното удостоверение
        /// </summary>
        public long? EndPageNum { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime LogBookValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime LogBookValidTo { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(LogBookId))]
        [InverseProperty("LogBookPermitLicenses")]
        public virtual LogBook LogBook { get; set; }
        [ForeignKey(nameof(PermitLicenseRegisterId))]
        [InverseProperty(nameof(PermitLicensesRegister.LogBookPermitLicenses))]
        public virtual PermitLicensesRegister PermitLicenseRegister { get; set; }
        [InverseProperty(nameof(AdmissionLogBookPage.LogBookPermitLicense))]
        public virtual ICollection<AdmissionLogBookPage> AdmissionLogBookPages { get; set; }
        [InverseProperty(nameof(ShipLogBookPage.LogBookPermitLicence))]
        public virtual ICollection<ShipLogBookPage> ShipLogBookPages { get; set; }
        [InverseProperty(nameof(TransportationLogBookPage.LogBookPermitLicense))]
        public virtual ICollection<TransportationLogBookPage> TransportationLogBookPages { get; set; }
    }
}