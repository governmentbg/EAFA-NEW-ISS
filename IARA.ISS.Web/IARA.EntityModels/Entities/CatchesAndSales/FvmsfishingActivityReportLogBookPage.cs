// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Номер на рейс за СНРК съобщение и страница от риболен дневник
    /// </summary>
    [Table("FVMSFishingActivityReportLogBookPage", Schema = "CatchSales")]
    [Index(nameof(FishingActivityReportId), Name = "IXFK_FVMSFishngActRepLogBookPage_FVMSFishngActivityReports")]
    [Index(nameof(ShipLogBookPageId), Name = "IXFK_FVMSFishngActRepLogBookPage_ShipLogBookPages")]
    public partial class FvmsfishingActivityReportLogBookPage
    {         public FvmsfishingActivityReportLogBookPage()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Уникален идентификатор на СНРК съобщение
        /// </summary>
        [Column("FishingActivityReportID")]
        public int FishingActivityReportId { get; set; }
        /// <summary>
        /// Уникален идентификатор на страница от риболовен дневник
        /// </summary>
        [Column("ShipLogBookPageID")]
        public int ShipLogBookPageId { get; set; }
        /// <summary>
        /// Уникален идентификатор на риболовен рейс
        /// </summary>
        [Required]
        [StringLength(50)]
        public string TripIdentifier { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(FishingActivityReportId))]
        [InverseProperty(nameof(FvmsfishingActivityReport.FvmsfishingActivityReportLogBookPages))]
        public virtual FvmsfishingActivityReport FishingActivityReport { get; set; }
        [ForeignKey(nameof(ShipLogBookPageId))]
        [InverseProperty("FvmsfishingActivityReportLogBookPages")]
        public virtual ShipLogBookPage ShipLogBookPage { get; set; }
    }
}
