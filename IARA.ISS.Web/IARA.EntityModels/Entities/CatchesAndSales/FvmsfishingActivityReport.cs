// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Заявки от СНРК за части (или цял) рейс - електронен дневник
    /// </summary>
    [Table("FVMSFishingActivityReports", Schema = "CatchSales")]
    [Index(nameof(VesselId), Name = "IXFK_FVMSFishingActivityReports_ShipRegister")]
    public partial class FvmsfishingActivityReport
    {
        public FvmsfishingActivityReport()
        {
            FvmsfishingActivityReportLogBookPages = new HashSet<FvmsfishingActivityReportLogBookPage>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// UUID на съобщението
        /// </summary>
        [Column("ResponseUUID")]
        public Guid ResponseUuid { get; set; }
        /// <summary>
        /// UUID на предишно съобщение, което е пряко свързано с текущото
        /// </summary>
        [Column("ReferencedResponseUUID")]
        public Guid? ReferencedResponseUuid { get; set; }
        /// <summary>
        /// Тип на съобщението - Original, Cancellation, Replace, Delete
        /// </summary>
        [Column("MDR_FLUX_GP_Purpose_ID")]
        public int MdrFluxGpPurposeId { get; set; }
        /// <summary>
        /// Тип на FA документа (DECLARATION/NOTIFICATION)
        /// </summary>
        [Column("MDR_FLUX_FA_Report_Type_ID")]
        public int MdrFluxFaReportTypeId { get; set; }
        /// <summary>
        /// Тип на FA - отплаване, риболовна операция, пристигане на пристанище и т.н.
        /// </summary>
        [Column("MDR_FLUX_FA_Type_ID")]
        public int MdrFluxFaTypeId { get; set; }
        /// <summary>
        /// Идентификатор от нашата система на кораб, за който се отнася съобщението (може да лиспва при събития: изтриване и анулиране)
        /// </summary>
        [Column("VesselID")]
        public int? VesselId { get; set; }
        /// <summary>
        /// JSON - цялото съобщение, пристигнало от СНРК
        /// </summary>
        [Required]
        public string ResponseMessage { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(VesselId))]
        [InverseProperty(nameof(ShipRegister.FvmsfishingActivityReports))]
        public virtual ShipRegister Vessel { get; set; }
        [InverseProperty(nameof(FvmsfishingActivityReportLogBookPage.FishingActivityReport))]
        public virtual ICollection<FvmsfishingActivityReportLogBookPage> FvmsfishingActivityReportLogBookPages { get; set; }
    }
}