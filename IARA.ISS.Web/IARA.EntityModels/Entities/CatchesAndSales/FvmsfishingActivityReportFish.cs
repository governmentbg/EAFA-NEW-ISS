// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Заявки от СНРК - водни организми за конкретен излет
    /// </summary>
    [Table("FVMSFishingActivityReportFishes", Schema = "CatchSales")]
    [Index("FishingActivityReportId", Name = "IXFK_FVMSFishingActivityReportFishes_FVMSFishingActivityReports")]
    [Index("FishingGearRegisterId", Name = "IXFK_FVMSFishingActivityReportFishes_FishingGearRegister")]
    [Index("CatchTypeId", Name = "IXFK_FVMSFishingActivityReportFishes_NCatchTypes")]
    [Index("CatchZoneId", Name = "IXFK_FVMSFishingActivityReportFishes_NCatchZones")]
    [Index("CatchSizeId", Name = "IXFK_FVMSFishingActivityReportFishes_NFishSizes")]
    [Index("FishId", Name = "IXFK_FVMSFishingActivityReportFishes_NFishes")]
    [Index("TurbotSizeGroupId", Name = "IXFK_FVMSFishingActivityReportFishes_NTurbotSizeGroups")]
    public partial class FvmsfishingActivityReportFish
    {
        public FvmsfishingActivityReportFish()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// UUID на съобщението
        /// </summary>
        [Column("FishingActivityReportID")]
        public int FishingActivityReportId { get; set; }
        /// <summary>
        /// UUID на предишно съобщение, което е пряко свързано с текущото
        /// </summary>
        [Column("FishID")]
        public int FishId { get; set; }
        /// <summary>
        /// Количество улов в кг
        /// </summary>
        [Precision(10, 3)]
        public decimal? Quantity { get; set; }
        /// <summary>
        /// Коефициент за приравняване на теглото, ако рибата не е цяла (WHL)
        /// </summary>
        public decimal QuantityConversionFactor { get; set; }
        /// <summary>
        ///  Брой екземпляри
        /// </summary>
        public int? UnitCount { get; set; }
        /// <summary>
        /// Вид улов
        /// </summary>
        [Column("CatchTypeID")]
        public int? CatchTypeId { get; set; }
        /// <summary>
        /// Размер на улова
        /// </summary>
        [Column("CatchSizeID")]
        public int? CatchSizeId { get; set; }
        /// <summary>
        /// Квадрант на улова
        /// </summary>
        [Column("CatchZoneID")]
        public int? CatchZoneId { get; set; }
        /// <summary>
        /// Размерна група на калкана
        /// </summary>
        [Column("TurbotSizeGroupID")]
        public int? TurbotSizeGroupId { get; set; }
        /// <summary>
        /// Риболовен уред, с който е извършен улова
        /// </summary>
        [Column("FishingGearRegisterID")]
        public int? FishingGearRegisterId { get; set; }
        /// <summary>
        /// Размер на окото
        /// </summary>
        [Column("FishingGearME")]
        [Precision(10, 3)]
        public decimal? FishingGearMe { get; set; }
        /// <summary>
        /// Модел на трал
        /// </summary>
        [Column("FishingGearMT")]
        [StringLength(200)]
        public string FishingGearMt { get; set; }
        /// <summary>
        /// Дължина или широчина на уреда
        /// </summary>
        [Column("FishingGearGM")]
        [Precision(10, 3)]
        public decimal? FishingGearGm { get; set; }
        /// <summary>
        /// Брой куки
        /// </summary>
        [Column("FishingGearGN")]
        [Precision(10, 3)]
        public decimal? FishingGearGn { get; set; }
        /// <summary>
        /// Височина
        /// </summary>
        [Column("FishingGearHE")]
        [Precision(10, 3)]
        public decimal? FishingGearHe { get; set; }
        /// <summary>
        /// Брой линии
        /// </summary>
        [Column("FishingGearNI")]
        [Precision(10, 3)]
        public decimal? FishingGearNi { get; set; }
        /// <summary>
        /// Брой мрежи във флота (за FLUX)
        /// </summary>
        [Column("FishingGearNN")]
        [Precision(10, 3)]
        public decimal? FishingGearNn { get; set; }
        /// <summary>
        /// Номинална дължина на мрежа (за FLUX : Nominal Length of one net in a fleet)
        /// </summary>
        [Column("FishingGearNL")]
        [Precision(10, 3)]
        public decimal? FishingGearNl { get; set; }
        /// <summary>
        /// Брой уреди
        /// </summary>
        [Column("FishingGearQG")]
        [Precision(10, 3)]
        public decimal? FishingGearQg { get; set; }
        /// <summary>
        /// Описание на уреда (УСР)
        /// </summary>
        [Column("FishingGearGD")]
        [StringLength(1000)]
        public string FishingGearGd { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey("CatchSizeId")]
        [InverseProperty("FvmsfishingActivityReportFishes")]
        public virtual NfishSize CatchSize { get; set; }
        [ForeignKey("CatchTypeId")]
        [InverseProperty("FvmsfishingActivityReportFishes")]
        public virtual NcatchType CatchType { get; set; }
        [ForeignKey("CatchZoneId")]
        [InverseProperty("FvmsfishingActivityReportFishes")]
        public virtual NcatchZone CatchZone { get; set; }
        [ForeignKey("FishId")]
        [InverseProperty("FvmsfishingActivityReportFishes")]
        public virtual Nfish Fish { get; set; }
        [ForeignKey("FishingActivityReportId")]
        [InverseProperty("FvmsfishingActivityReportFishes")]
        public virtual FvmsfishingActivityReport FishingActivityReport { get; set; }
        [ForeignKey("FishingGearRegisterId")]
        [InverseProperty("FvmsfishingActivityReportFishes")]
        public virtual FishingGearRegister FishingGearRegister { get; set; }
        [ForeignKey("TurbotSizeGroupId")]
        [InverseProperty("FvmsfishingActivityReportFishes")]
        public virtual NturbotSizeGroup TurbotSizeGroup { get; set; }
    }
}
