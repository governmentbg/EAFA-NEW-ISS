// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Адреси
    /// </summary>
    [Table("Addresses", Schema = "Legals")]
    [Index(nameof(CreatedBy), nameof(UpdatedBy), Name = "IDX_Legals_Addresses_Migration")]
    [Index(nameof(MunicipalityId), Name = "IXFK_Addresses_NMunicipalities")]
    [Index(nameof(PopulatedAreaId), Name = "IXFK_Addresses_NPopulatedAreas")]
    [Index(nameof(DistrictId), Name = "IXFK_Addresses_NRegions")]
    [Index(nameof(CountryId), Name = "IXFK_ISS_Addresses_ISS_Countries")]
    public partial class Address
    {
        public Address()
        {
            ApplicationChangeOfCircumstances = new HashSet<ApplicationChangeOfCircumstance>();
            ApplicationDeliveries = new HashSet<ApplicationDelivery>();
            Auanwitnesses = new HashSet<Auanwitness>();
            BuyerRegisters = new HashSet<BuyerRegister>();
            InspDeliveries = new HashSet<InspDelivery>();
            InspectedPeople = new HashSet<InspectedPerson>();
            LegalsAddresses = new HashSet<LegalsAddress>();
            PersonAddresses = new HashSet<PersonAddress>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Държава
        /// </summary>
        [Column("CountryID")]
        public int? CountryId { get; set; }
        /// <summary>
        /// Населено място
        /// </summary>
        [Column("PopulatedAreaID")]
        public int? PopulatedAreaId { get; set; }
        /// <summary>
        /// Пощенски код
        /// </summary>
        [StringLength(10)]
        public string PostCode { get; set; }
        /// <summary>
        /// Област
        /// </summary>
        [Column("DistrictID")]
        public int? DistrictId { get; set; }
        /// <summary>
        /// Община
        /// </summary>
        [Column("MunicipalityID")]
        public int? MunicipalityId { get; set; }
        /// <summary>
        /// Регион
        /// </summary>
        [StringLength(200)]
        public string Region { get; set; }
        /// <summary>
        /// Улица име или Жилищен комплекс
        /// </summary>
        [StringLength(200)]
        public string Street { get; set; }
        /// <summary>
        /// Номер на улица
        /// </summary>
        [StringLength(10)]
        public string StreetNum { get; set; }
        /// <summary>
        /// Блок
        /// </summary>
        [StringLength(10)]
        public string BlockNum { get; set; }
        /// <summary>
        /// Вход
        /// </summary>
        [StringLength(10)]
        public string EntranceNum { get; set; }
        /// <summary>
        /// Етаж
        /// </summary>
        [StringLength(10)]
        public string FloorNum { get; set; }
        /// <summary>
        /// Апартамент
        /// </summary>
        [StringLength(10)]
        public string ApartmentNum { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(CountryId))]
        [InverseProperty(nameof(Ncountry.Addresses))]
        public virtual Ncountry Country { get; set; }
        [ForeignKey(nameof(DistrictId))]
        [InverseProperty(nameof(Ndistrict.Addresses))]
        public virtual Ndistrict District { get; set; }
        [ForeignKey(nameof(MunicipalityId))]
        [InverseProperty(nameof(Nmunicipality.Addresses))]
        public virtual Nmunicipality Municipality { get; set; }
        [ForeignKey(nameof(PopulatedAreaId))]
        [InverseProperty(nameof(NpopulatedArea.Addresses))]
        public virtual NpopulatedArea PopulatedArea { get; set; }
        [InverseProperty(nameof(ApplicationChangeOfCircumstance.Address))]
        public virtual ICollection<ApplicationChangeOfCircumstance> ApplicationChangeOfCircumstances { get; set; }
        [InverseProperty(nameof(ApplicationDelivery.Address))]
        public virtual ICollection<ApplicationDelivery> ApplicationDeliveries { get; set; }
        [InverseProperty(nameof(Auanwitness.Address))]
        public virtual ICollection<Auanwitness> Auanwitnesses { get; set; }
        [InverseProperty(nameof(BuyerRegister.UtilityAddress))]
        public virtual ICollection<BuyerRegister> BuyerRegisters { get; set; }
        [InverseProperty(nameof(InspDelivery.Address))]
        public virtual ICollection<InspDelivery> InspDeliveries { get; set; }
        [InverseProperty(nameof(InspectedPerson.Address))]
        public virtual ICollection<InspectedPerson> InspectedPeople { get; set; }
        [InverseProperty(nameof(LegalsAddress.Address))]
        public virtual ICollection<LegalsAddress> LegalsAddresses { get; set; }
        [InverseProperty(nameof(PersonAddress.Address))]
        public virtual ICollection<PersonAddress> PersonAddresses { get; set; }
    }
}