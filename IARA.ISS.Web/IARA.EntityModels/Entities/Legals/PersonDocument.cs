// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Лични документи на физическо лице
    /// </summary>
    [Table("PersonDocuments", Schema = "Legals")]
    [Index(nameof(DocumentTypeId), Name = "IXFK_PersonDocuments_NDocumentTypes")]
    [Index(nameof(PersonId), Name = "IXFK_PersonDocuments_Persons_Hist")]
    [Index(nameof(PersonId), nameof(DocumentTypeId), Name = "UK_Legals_PersonDocuments", IsUnique = true)]
    public partial class PersonDocument
    {         public PersonDocument()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Физическо лице
        /// </summary>
        [Column("PersonID")]
        public int PersonId { get; set; }
        /// <summary>
        /// Тип документ
        /// </summary>
        [Column("DocumentTypeID")]
        public int DocumentTypeId { get; set; }
        /// <summary>
        /// Номер на документ за самоличност
        /// </summary>
        [Required]
        [StringLength(50)]
        public string DocumentNumber { get; set; }
        /// <summary>
        /// Дата на издаване на документ
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? DocumentIssueDate { get; set; }
        /// <summary>
        /// Издател на документ
        /// </summary>
        [StringLength(50)]
        public string DocumentPublisher { get; set; }
        /// <summary>
        /// Допълнителни коментари и бележки
        /// </summary>
        [StringLength(500)]
        public string Comments { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }

        [ForeignKey(nameof(DocumentTypeId))]
        [InverseProperty(nameof(NdocumentType.PersonDocuments))]
        public virtual NdocumentType DocumentType { get; set; }
        [ForeignKey(nameof(PersonId))]
        [InverseProperty("PersonDocuments")]
        public virtual Person Person { get; set; }
    }
}
