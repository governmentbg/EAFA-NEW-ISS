// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Адреси на физическо лице
    /// </summary>
    [Table("PersonAddresses", Schema = "Legals")]
    [Index(nameof(AddressTypeId), Name = "IXFK_ISS_PersonAddresses_ISS_AddressTypes")]
    [Index(nameof(AddressId), Name = "IXFK_ISS_PersonAddresses_ISS_Addresses")]
    [Index(nameof(PersonId), Name = "IXFK_ISS_PersonAddresses_ISS_Persons")]
    [Index(nameof(PersonId), nameof(AddressId), nameof(AddressTypeId), Name = "UK_ISS_PersonAddresses", IsUnique = true)]
    public partial class PersonAddress
    {         public PersonAddress()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Физическо лице
        /// </summary>
        [Column("PersonID")]
        public int PersonId { get; set; }
        /// <summary>
        /// Адрес
        /// </summary>
        [Column("AddressID")]
        public int AddressId { get; set; }
        /// <summary>
        /// Тип адрес
        /// </summary>
        [Column("AddressTypeID")]
        public int AddressTypeId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AddressId))]
        [InverseProperty("PersonAddresses")]
        public virtual Address Address { get; set; }
        [ForeignKey(nameof(AddressTypeId))]
        [InverseProperty(nameof(NaddressType.PersonAddresses))]
        public virtual NaddressType AddressType { get; set; }
        [ForeignKey(nameof(PersonId))]
        [InverseProperty("PersonAddresses")]
        public virtual Person Person { get; set; }
    }
}
