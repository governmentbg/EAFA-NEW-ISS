// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Квоти за улов на кораб
    /// </summary>
    [Table("ShipCatchQuotas", Schema = "RQuo")]
    [Index(nameof(ShipId), Name = "IXFK_RQuo_ShipCatchQuotas_RS_ShipRegister")]
    [Index(nameof(CatchQuotaId), Name = "IXFK_ShipCatchQuotas_CatchQuotas")]
    [Index(nameof(CatchQuotaId), nameof(ShipId), Name = "UK_RQuo_ShipCatchQuotas", IsUnique = true)]
    public partial class ShipCatchQuota
    {
        public ShipCatchQuota()
        {
            ShipCatchQuotasHists = new HashSet<ShipCatchQuotasHist>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Квота за период
        /// </summary>
        [Column("CatchQuotaID")]
        public int CatchQuotaId { get; set; }
        /// <summary>
        /// Кораб
        /// </summary>
        [Column("ShipID")]
        public int ShipId { get; set; }
        /// <summary>
        /// Количество улов за кораба
        /// </summary>
        public decimal ShipQuotaSize { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(CatchQuotaId))]
        [InverseProperty("ShipCatchQuota")]
        public virtual CatchQuota CatchQuota { get; set; }
        [ForeignKey(nameof(ShipId))]
        [InverseProperty(nameof(ShipRegister.ShipCatchQuota))]
        public virtual ShipRegister Ship { get; set; }
        [InverseProperty(nameof(ShipCatchQuotasHist.ShipCatchQuota))]
        public virtual ICollection<ShipCatchQuotasHist> ShipCatchQuotasHists { get; set; }
    }
}