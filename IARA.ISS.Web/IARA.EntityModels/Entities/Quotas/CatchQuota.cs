// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Квоти за улов
    /// </summary>
    [Table("CatchQuotas", Schema = "RQuo")]
    [Index(nameof(FishId), Name = "IXFK_CatchQuotas_NFishes")]
    [Index(nameof(FishId), nameof(PeriodStart), Name = "UK_RQuo_CatchQuotas", IsUnique = true)]
    public partial class CatchQuota
    {
        public CatchQuota()
        {
            CatchQuotaFiles = new HashSet<CatchQuotaFile>();
            CatchQuotaUnloadPorts = new HashSet<CatchQuotaUnloadPort>();
            CatchQuotasHists = new HashSet<CatchQuotasHist>();
            ShipCatchQuota = new HashSet<ShipCatchQuota>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Вид риба, за която е квотата
        /// </summary>
        [Column("FishID")]
        public int FishId { get; set; }
        /// <summary>
        /// Начало на период за квота
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime PeriodStart { get; set; }
        /// <summary>
        /// Край на период за квота
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime PeriodEnd { get; set; }
        /// <summary>
        /// Количество улов
        /// </summary>
        public int QuotaSize { get; set; }
        /// <summary>
        /// Флаг дали за тази квота има разпределение по кораби
        /// </summary>
        public bool HasShipQuotas { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(FishId))]
        [InverseProperty(nameof(Nfish.CatchQuota))]
        public virtual Nfish Fish { get; set; }
        [InverseProperty(nameof(CatchQuotaFile.Record))]
        public virtual ICollection<CatchQuotaFile> CatchQuotaFiles { get; set; }
        [InverseProperty(nameof(CatchQuotaUnloadPort.CatchQuota))]
        public virtual ICollection<CatchQuotaUnloadPort> CatchQuotaUnloadPorts { get; set; }
        [InverseProperty(nameof(CatchQuotasHist.CatchQuota))]
        public virtual ICollection<CatchQuotasHist> CatchQuotasHists { get; set; }
        [InverseProperty("CatchQuota")]
        public virtual ICollection<ShipCatchQuota> ShipCatchQuota { get; set; }
    }
}