// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Разрешени пристанища за разтоварване на дадена квота
    /// </summary>
    [Table("CatchQuotaUnloadPorts", Schema = "RQuo")]
    [Index(nameof(CatchQuotaId), Name = "IXFK_CatchQuotaUnloadPorts_CatchQuotas")]
    [Index(nameof(PortId), Name = "IXFK_CatchQuotaUnloadPorts_NPorts")]
    [Index(nameof(PortId), nameof(CatchQuotaId), Name = "UK_RQuo_CatchQuotaUnloadPorts", IsUnique = true)]
    public partial class CatchQuotaUnloadPort
    {         public CatchQuotaUnloadPort()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Квота
        /// </summary>
        [Column("CatchQuotaID")]
        public int CatchQuotaId { get; set; }
        /// <summary>
        /// Пристанище
        /// </summary>
        [Column("PortID")]
        public int PortId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(CatchQuotaId))]
        [InverseProperty("CatchQuotaUnloadPorts")]
        public virtual CatchQuota CatchQuota { get; set; }
        [ForeignKey(nameof(PortId))]
        [InverseProperty(nameof(Nport.CatchQuotaUnloadPorts))]
        public virtual Nport Port { get; set; }
    }
}
