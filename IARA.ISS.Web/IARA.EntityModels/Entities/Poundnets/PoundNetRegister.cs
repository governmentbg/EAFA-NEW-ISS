// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Регистър даляни
    /// </summary>
    [Table("PoundNetRegister", Schema = "RDal")]
    [Index(nameof(DistrictId), Name = "IXFK_PoundNetRegister_NDistricts")]
    [Index(nameof(MunicipalityId), Name = "IXFK_PoundNetRegister_NMunicipalities")]
    [Index(nameof(PopulatedAreaId), Name = "IXFK_PoundNetRegister_NPopulatedAreas")]
    [Index(nameof(CategoryTypeId), Name = "IXFK_PoundNetRegister_NPoundNetCategoryType")]
    [Index(nameof(SeasonTypeId), Name = "IXFK_PoundNetRegister_NPoundNetSeasonType")]
    [Index(nameof(StatusId), Name = "IXFK_PoundNetRegister_NPoundNetStatuses")]
    [Index(nameof(PoundNetNum), Name = "UK_RDal_PoundNetRegister", IsUnique = true)]
    public partial class PoundNetRegister
    {
        public PoundNetRegister()
        {
            FishingGearChecks = new HashSet<FishingGearCheck>();
            PermitLicensesRegisters = new HashSet<PermitLicensesRegister>();
            PermitRegisters = new HashSet<PermitRegister>();
            PoundNetCoordinates = new HashSet<PoundNetCoordinate>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Номер на разрешително
        /// </summary>
        [Required]
        [StringLength(20)]
        public string PoundNetNum { get; set; }
        /// <summary>
        /// Дата на регистрация
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime RegistrationDate { get; set; }
        /// <summary>
        /// Статус
        /// </summary>
        [Column("StatusID")]
        public int StatusId { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Name { get; set; }
        /// <summary>
        /// Сезонност
        /// </summary>
        [Column("SeasonTypeID")]
        public int SeasonTypeId { get; set; }
        /// <summary>
        /// Категория
        /// </summary>
        [Column("CategoryTypeID")]
        public int CategoryTypeId { get; set; }
        /// <summary>
        /// Заповед за определяне на действие
        /// </summary>
        [StringLength(50)]
        public string ActivityOrderNum { get; set; }
        /// <summary>
        /// Дата на заповед за определяне на действие
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? ActivityOrderDate { get; set; }
        /// <summary>
        /// Коментари 
        /// </summary>
        [StringLength(4000)]
        public string Comments { get; set; }
        /// <summary>
        /// Дълбочина на мястото от
        /// </summary>
        public decimal? DepthFrom { get; set; }
        /// <summary>
        /// Дълбочина на мястото до
        /// </summary>
        public decimal? DepthTo { get; set; }
        /// <summary>
        /// Дължина на хавлията
        /// </summary>
        public decimal? TowelLength { get; set; }
        /// <summary>
        /// Ширина на къщата
        /// </summary>
        public decimal? HouseWidth { get; set; }
        /// <summary>
        /// Дължина на къщата
        /// </summary>
        public decimal? HouseLength { get; set; }
        /// <summary>
        /// Размер на окото на торбата
        /// </summary>
        public decimal? BagEyeSize { get; set; }
        /// <summary>
        /// Област
        /// </summary>
        [Column("DistrictID")]
        public int? DistrictId { get; set; }
        /// <summary>
        /// Община
        /// </summary>
        [Column("MunicipalityID")]
        public int? MunicipalityId { get; set; }
        /// <summary>
        /// Населено място
        /// </summary>
        [Column("PopulatedAreaID")]
        public int? PopulatedAreaId { get; set; }
        /// <summary>
        /// Местност
        /// </summary>
        [StringLength(100)]
        public string Region { get; set; }
        /// <summary>
        /// Описание на местонахождение
        /// </summary>
        [StringLength(500)]
        public string LocationDescription { get; set; }
        /// <summary>
        /// Описание на Зона на действие
        /// </summary>
        [StringLength(4000)]
        public string AreaDescription { get; set; }
        /// <summary>
        /// Цена за годишно УСР
        /// </summary>
        public decimal? PermitLicencePrice { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(CategoryTypeId))]
        [InverseProperty(nameof(NpoundNetCategoryType.PoundNetRegisters))]
        public virtual NpoundNetCategoryType CategoryType { get; set; }
        [ForeignKey(nameof(DistrictId))]
        [InverseProperty(nameof(Ndistrict.PoundNetRegisters))]
        public virtual Ndistrict District { get; set; }
        [ForeignKey(nameof(MunicipalityId))]
        [InverseProperty(nameof(Nmunicipality.PoundNetRegisters))]
        public virtual Nmunicipality Municipality { get; set; }
        [ForeignKey(nameof(PopulatedAreaId))]
        [InverseProperty(nameof(NpopulatedArea.PoundNetRegisters))]
        public virtual NpopulatedArea PopulatedArea { get; set; }
        [ForeignKey(nameof(SeasonTypeId))]
        [InverseProperty(nameof(NpoundNetSeasonType.PoundNetRegisters))]
        public virtual NpoundNetSeasonType SeasonType { get; set; }
        [ForeignKey(nameof(StatusId))]
        [InverseProperty(nameof(NpoundNetStatus.PoundNetRegisters))]
        public virtual NpoundNetStatus Status { get; set; }
        [InverseProperty(nameof(FishingGearCheck.PoundNet))]
        public virtual ICollection<FishingGearCheck> FishingGearChecks { get; set; }
        [InverseProperty(nameof(PermitLicensesRegister.PoundNet))]
        public virtual ICollection<PermitLicensesRegister> PermitLicensesRegisters { get; set; }
        [InverseProperty(nameof(PermitRegister.PoundNet))]
        public virtual ICollection<PermitRegister> PermitRegisters { get; set; }
        [InverseProperty(nameof(PoundNetCoordinate.PoundNet))]
        public virtual ICollection<PoundNetCoordinate> PoundNetCoordinates { get; set; }
    }
}