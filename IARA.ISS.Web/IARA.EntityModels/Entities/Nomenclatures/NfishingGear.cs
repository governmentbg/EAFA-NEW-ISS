// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Риболовни уреди
    /// </summary>
    [Table("NFishingGears", Schema = "Noms")]
    [Index(nameof(GearTypeId), Name = "IXFK_ISS_NFishingGears_ISS_NFishingGearTypes")]
    [Index(nameof(MdrGearTypeId), Name = "IXFK_NFishingGears_MDR_Gear_Type")]
    [Index(nameof(Code), nameof(ValidTo), Name = "UK_ISS_NFishingGears", IsUnique = true)]
    public partial class NfishingGear
    {
        public NfishingGear()
        {
            AuanconfiscatedFishingGears = new HashSet<AuanconfiscatedFishingGear>();
            FishingGearRegisters = new HashSet<FishingGearRegister>();
            MapTariffFishingGears = new HashSet<MapTariffFishingGear>();
            PenalDecreeSeizedFishingGears = new HashSet<PenalDecreeSeizedFishingGear>();
            ShipRegisterAdditionalFishingGears = new HashSet<ShipRegister>();
            ShipRegisterMainFishingGears = new HashSet<ShipRegister>();
        }

        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Трибуквен код
        /// </summary>
        [Required]
        [StringLength(3)]
        public string Code { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Name { get; set; }
        /// <summary>
        /// Група уред
        /// </summary>
        [Column("GearTypeID")]
        public int GearTypeId { get; set; }
        /// <summary>
        /// Тип параметри, които се въвеждат за този уред (Common / PoundNet )
        /// </summary>
        [StringLength(20)]
        public string GearParametersType { get; set; }
        /// <summary>
        /// Идентификатор във FLUX
        /// </summary>
        [Column("MDR_Gear_Type_ID")]
        public int? MdrGearTypeId { get; set; }
        /// <summary>
        /// Флаг дали уредът се използва за съвместен риболов.
        /// </summary>
        public bool IsForMutualFishing { get; set; }
        /// <summary>
        /// Флаг дали уредът е от мрежен тип
        /// </summary>
        public bool IsNetType { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(GearTypeId))]
        [InverseProperty(nameof(NfishingGearType.NfishingGears))]
        public virtual NfishingGearType GearType { get; set; }
        [ForeignKey(nameof(MdrGearTypeId))]
        [InverseProperty("NfishingGears")]
        public virtual MdrGearType MdrGearType { get; set; }
        [InverseProperty(nameof(AuanconfiscatedFishingGear.FishingGear))]
        public virtual ICollection<AuanconfiscatedFishingGear> AuanconfiscatedFishingGears { get; set; }
        [InverseProperty(nameof(FishingGearRegister.FishingGearType))]
        public virtual ICollection<FishingGearRegister> FishingGearRegisters { get; set; }
        [InverseProperty(nameof(MapTariffFishingGear.FishingGear))]
        public virtual ICollection<MapTariffFishingGear> MapTariffFishingGears { get; set; }
        [InverseProperty(nameof(PenalDecreeSeizedFishingGear.FishingGear))]
        public virtual ICollection<PenalDecreeSeizedFishingGear> PenalDecreeSeizedFishingGears { get; set; }
        [InverseProperty(nameof(ShipRegister.AdditionalFishingGear))]
        public virtual ICollection<ShipRegister> ShipRegisterAdditionalFishingGears { get; set; }
        [InverseProperty(nameof(ShipRegister.MainFishingGear))]
        public virtual ICollection<ShipRegister> ShipRegisterMainFishingGears { get; set; }
    }
}