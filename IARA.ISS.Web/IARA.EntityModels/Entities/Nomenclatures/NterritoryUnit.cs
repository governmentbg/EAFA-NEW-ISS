// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Териториални звена
    /// </summary>
    [Table("NTerritoryUnits", Schema = "Noms")]
    [Index(nameof(SectorId), Name = "IXFK_NTerritoryUnits_NSectors")]
    [Index(nameof(ValidTo), nameof(Code), Name = "UK_ISS_NTerritoryUnits", IsUnique = true)]
    public partial class NterritoryUnit
    {
        public NterritoryUnit()
        {
            ApplicationChangeHistories = new HashSet<ApplicationChangeHistory>();
            ApplicationDeliveries = new HashSet<ApplicationDelivery>();
            Applications = new HashSet<Application>();
            AquacultureFacilityRegisters = new HashSet<AquacultureFacilityRegister>();
            BuyerRegisters = new HashSet<BuyerRegister>();
            FishermenRegisters = new HashSet<FishermenRegister>();
            FishingAssociations = new HashSet<FishingAssociation>();
            InspDeliveries = new HashSet<InspDelivery>();
            InspectionRegisters = new HashSet<InspectionRegister>();
            PenalDecreeSeizedFishingGears = new HashSet<PenalDecreeSeizedFishingGear>();
            UserInfos = new HashSet<UserInfo>();
        }

        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// код
        /// </summary>
        [Required]
        [StringLength(10)]
        public string Code { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Name { get; set; }
        /// <summary>
        /// Сектор
        /// </summary>
        [Column("SectorID")]
        public int SectorId { get; set; }
        /// <summary>
        /// Уникален пореден номер за съответното ТЗ, който се ползва в Регистър Купувачи и ЦПП
        /// </summary>
        public int BuyersRegisterSequence { get; set; }
        /// <summary>
        /// Уникален пореден номер за съответното ТЗ, който се ползва в Регистър правоспособни рибари
        /// </summary>
        public int QualifiedFisherRegisterSequence { get; set; }
        /// <summary>
        /// Уникален пореден номер за съответното ТЗ, който се ползва в Регистър Аквакултурни стопанства
        /// </summary>
        public int AquaculturesRegisterSequence { get; set; }
        /// <summary>
        /// Уникален пореден номер за съответното ТЗ, който се ползва в Регистър разрешителни за стопански риболов
        /// </summary>
        public int PermitRegisterSequence { get; set; }
        /// <summary>
        /// Уникален пореден номер за съответното ТЗ, който се ползва в Регистър удостоверения за стопански риболов
        /// </summary>
        public int PermitLicenceRegisterSequence { get; set; }
        public int PenaltyDecreeRegisterSequence { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(SectorId))]
        [InverseProperty(nameof(Nsector.NterritoryUnits))]
        public virtual Nsector Sector { get; set; }
        [InverseProperty(nameof(ApplicationChangeHistory.TerritoryUnit))]
        public virtual ICollection<ApplicationChangeHistory> ApplicationChangeHistories { get; set; }
        [InverseProperty(nameof(ApplicationDelivery.TerritoryUnit))]
        public virtual ICollection<ApplicationDelivery> ApplicationDeliveries { get; set; }
        [InverseProperty(nameof(Application.TerritoryUnit))]
        public virtual ICollection<Application> Applications { get; set; }
        [InverseProperty(nameof(AquacultureFacilityRegister.TerritoryUnit))]
        public virtual ICollection<AquacultureFacilityRegister> AquacultureFacilityRegisters { get; set; }
        [InverseProperty(nameof(BuyerRegister.TerritoryUnit))]
        public virtual ICollection<BuyerRegister> BuyerRegisters { get; set; }
        [InverseProperty(nameof(FishermenRegister.ExamTerritoryUnit))]
        public virtual ICollection<FishermenRegister> FishermenRegisters { get; set; }
        [InverseProperty(nameof(FishingAssociation.TerritoryUnit))]
        public virtual ICollection<FishingAssociation> FishingAssociations { get; set; }
        [InverseProperty(nameof(InspDelivery.TerritoryUnit))]
        public virtual ICollection<InspDelivery> InspDeliveries { get; set; }
        [InverseProperty(nameof(InspectionRegister.TerritoryUnit))]
        public virtual ICollection<InspectionRegister> InspectionRegisters { get; set; }
        [InverseProperty(nameof(PenalDecreeSeizedFishingGear.TerritoryUnit))]
        public virtual ICollection<PenalDecreeSeizedFishingGear> PenalDecreeSeizedFishingGears { get; set; }
        [InverseProperty(nameof(UserInfo.TerritoryUnit))]
        public virtual ICollection<UserInfo> UserInfos { get; set; }
    }
}