// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Населени места (градове, села)
    /// </summary>
    [Table("NPopulatedAreas", Schema = "Noms")]
    [Index(nameof(MunicipalityId), Name = "IXFK_NPopulatedAreas_NMunicipalities")]
    [Index(nameof(Code), nameof(ValidTo), Name = "UK_Noms_NPopulatedAreas", IsUnique = true)]
    public partial class NpopulatedArea
    {
        public NpopulatedArea()
        {
            Addresses = new HashSet<Address>();
            AquacultureFacilityRegisters = new HashSet<AquacultureFacilityRegister>();
            PoundNetRegisters = new HashSet<PoundNetRegister>();
        }

        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// код
        /// </summary>
        [Required]
        [StringLength(10)]
        public string Code { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Name { get; set; }
        /// <summary>
        /// Община
        /// </summary>
        [Column("MunicipalityID")]
        public int MunicipalityId { get; set; }
        /// <summary>
        /// Град или село или манастир (Г/С/М)
        /// </summary>
        [MaxLength(1)]
        public char AreaType { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(MunicipalityId))]
        [InverseProperty(nameof(Nmunicipality.NpopulatedAreas))]
        public virtual Nmunicipality Municipality { get; set; }
        [InverseProperty(nameof(Address.PopulatedArea))]
        public virtual ICollection<Address> Addresses { get; set; }
        [InverseProperty(nameof(AquacultureFacilityRegister.PopulatedArea))]
        public virtual ICollection<AquacultureFacilityRegister> AquacultureFacilityRegisters { get; set; }
        [InverseProperty(nameof(PoundNetRegister.PopulatedArea))]
        public virtual ICollection<PoundNetRegister> PoundNetRegisters { get; set; }
    }
}