// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Детайли за основание за ползване на кораб/далян
    /// </summary>
    [Table("HolderGroundsForUse", Schema = "RStRib")]
    [Index(nameof(GroundsForUseTypeId), Name = "IXFK_HolderGroundsForUse_NHolderGroundsForUseTypes")]
    public partial class HolderGroundsForUse
    {
        public HolderGroundsForUse()
        {
            PermitLicensesRegisters = new HashSet<PermitLicensesRegister>();
            PermitRegisterPoundNetGroundsForUses = new HashSet<PermitRegister>();
            PermitRegisterShipGroundsForUses = new HashSet<PermitRegister>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Тип основание за ползване на кораб/далян
        /// </summary>
        [Column("GroundsForUseTypeID")]
        public int GroundsForUseTypeId { get; set; }
        /// <summary>
        /// Номер пълномощно на представител
        /// </summary>
        [Required]
        [StringLength(50)]
        public string Number { get; set; }
        /// <summary>
        /// Пълномощно валидно от
        /// </summary>
        public DateTime? GroundsForUseValidFrom { get; set; }
        /// <summary>
        /// Пълномощно валидно до
        /// </summary>
        public DateTime? GroundsForUseValidTo { get; set; }
        /// <summary>
        /// Флаг дали пълномощното е безсрочно
        /// </summary>
        public bool IsGroundsForUseUnlimited { get; set; }
        /// <summary>
        /// Издател
        /// </summary>
        [StringLength(100)]
        public string Issuer { get; set; }
        /// <summary>
        /// Забележки
        /// </summary>
        [StringLength(500)]
        public string Comment { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(GroundsForUseTypeId))]
        [InverseProperty(nameof(NholderGroundsForUseType.HolderGroundsForUses))]
        public virtual NholderGroundsForUseType GroundsForUseType { get; set; }
        [InverseProperty(nameof(PermitLicensesRegister.ShipGroundsForUse))]
        public virtual ICollection<PermitLicensesRegister> PermitLicensesRegisters { get; set; }
        [InverseProperty(nameof(PermitRegister.PoundNetGroundsForUse))]
        public virtual ICollection<PermitRegister> PermitRegisterPoundNetGroundsForUses { get; set; }
        [InverseProperty(nameof(PermitRegister.ShipGroundsForUse))]
        public virtual ICollection<PermitRegister> PermitRegisterShipGroundsForUses { get; set; }
    }
}