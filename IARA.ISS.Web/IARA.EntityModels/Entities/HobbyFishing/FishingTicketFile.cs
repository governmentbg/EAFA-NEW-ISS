// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Файлове към билети за любителски риболов
    /// </summary>
    [Table("FishingTicketFiles", Schema = "LRib")]
    [Index(nameof(FileTypeId), Name = "IXFK_FishingTicketFiles_NFileTypes")]
    [Index(nameof(FileId), Name = "IXFK_LRib_FishingTicketFiles_ISS_Files")]
    [Index(nameof(RecordId), Name = "IXFK_LRib_FishingTicketFiles_LRib_FishingTickets")]
    [Index(nameof(RecordId), nameof(FileId), nameof(FileTypeId), Name = "UK_LRib_FishingTicketFiles", IsUnique = true)]
    public partial class FishingTicketFile
    {         public FishingTicketFile()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Тип на файла
        /// </summary>
        [Column("FileTypeID")]
        public int FileTypeId { get; set; }
        /// <summary>
        /// Риболовен билет
        /// </summary>
        [Column("RecordID")]
        public int RecordId { get; set; }
        /// <summary>
        /// Прикачен файл
        /// </summary>
        [Column("FileID")]
        public int FileId { get; set; }
        /// <summary>
        /// ID на билета в старата база, използва се само за миграциите.
        /// </summary>
        [Column("OldDbTicketID")]
        public int? OldDbTicketId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(FileId))]
        [InverseProperty("FishingTicketFiles")]
        public virtual File File { get; set; }
        [ForeignKey(nameof(FileTypeId))]
        [InverseProperty(nameof(NfileType.FishingTicketFiles))]
        public virtual NfileType FileType { get; set; }
        [ForeignKey(nameof(RecordId))]
        [InverseProperty(nameof(FishingTicket.FishingTicketFiles))]
        public virtual FishingTicket Record { get; set; }
    }
}
