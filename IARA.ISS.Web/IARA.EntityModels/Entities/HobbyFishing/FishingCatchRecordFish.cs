// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Данни за улов за вид риба за билети за любителски риболов
    /// </summary>
    [Table("FishingCatchRecordFishes", Schema = "LRib")]
    [Index(nameof(CatchRecordId), Name = "IXFK_CatchRecordFishes_CatchRecords")]
    [Index(nameof(FishId), Name = "IXFK_CatchRecordFishes_NFishes")]
    [Index(nameof(CatchRecordId), nameof(FishId), Name = "UK_CatchSales_CatchRecordFishes", IsUnique = true)]
    public partial class FishingCatchRecordFish
    {         public FishingCatchRecordFish()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Данни за улов
        /// </summary>
        [Column("CatchRecordID")]
        public int CatchRecordId { get; set; }
        /// <summary>
        /// Вид риба / морски организъм
        /// </summary>
        [Column("FishID")]
        public int FishId { get; set; }
        /// <summary>
        /// Брой
        /// </summary>
        public int Count { get; set; }
        /// <summary>
        /// Количество улов в КГ
        /// </summary>
        public decimal Quantity { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(CatchRecordId))]
        [InverseProperty(nameof(FishingCatchRecord.FishingCatchRecordFishes))]
        public virtual FishingCatchRecord CatchRecord { get; set; }
        [ForeignKey(nameof(FishId))]
        [InverseProperty(nameof(Nfish.FishingCatchRecordFishes))]
        public virtual Nfish Fish { get; set; }
    }
}
