// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Риболовни сдружения
    /// </summary>
    [Table("FishingAssociations", Schema = "LRib")]
    [Index(nameof(AssociationLegalId), Name = "IXFK_FishingAssociations_Legals_Hist")]
    [Index(nameof(TerritoryUnitId), Name = "IXFK_FishingAssociations_NTerritoryUnits")]
    [Index(nameof(CreatedBy), nameof(UpdatedBy), Name = "IX_LRib_FishingAssociations_Migration")]
    [Index(nameof(AssociationLegalId), Name = "UK_LRib_FishingAssociations", IsUnique = true)]
    public partial class FishingAssociation
    {
        public FishingAssociation()
        {
            FishingAssociationFiles = new HashSet<FishingAssociationFile>();
            FishingAssociationMembers = new HashSet<FishingAssociationMember>();
            FishingTickets = new HashSet<FishingTicket>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Териториално звено
        /// </summary>
        [Column("TerritoryUnitID")]
        public int TerritoryUnitId { get; set; }
        /// <summary>
        /// Юридическо лице на сдружение
        /// </summary>
        [Column("AssociationLegalID")]
        public int AssociationLegalId { get; set; }
        /// <summary>
        /// Флаг дали Сдружението е Прекратено от достъп
        /// </summary>
        public bool IsCanceled { get; set; }
        /// <summary>
        /// Дата на прекратяване
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? CancellationDate { get; set; }
        /// <summary>
        /// Причина за прекратяване
        /// </summary>
        [StringLength(4000)]
        public string CancellationReason { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AssociationLegalId))]
        [InverseProperty(nameof(Legal.FishingAssociation))]
        public virtual Legal AssociationLegal { get; set; }
        [ForeignKey(nameof(TerritoryUnitId))]
        [InverseProperty(nameof(NterritoryUnit.FishingAssociations))]
        public virtual NterritoryUnit TerritoryUnit { get; set; }
        [InverseProperty(nameof(FishingAssociationFile.Record))]
        public virtual ICollection<FishingAssociationFile> FishingAssociationFiles { get; set; }
        [InverseProperty(nameof(FishingAssociationMember.FishingAssociation))]
        public virtual ICollection<FishingAssociationMember> FishingAssociationMembers { get; set; }
        [InverseProperty(nameof(FishingTicket.CreatedByFishingAssociation))]
        public virtual ICollection<FishingTicket> FishingTickets { get; set; }
    }
}