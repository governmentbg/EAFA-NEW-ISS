// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using NetTopologySuite.Geometries;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Данни за улов за билети за любителски риболов
    /// </summary>
    [Table("FishingCatchRecords", Schema = "LRib")]
    [Index(nameof(TicketId), Name = "IXFK_CatchRecords_FishingTickets")]
    public partial class FishingCatchRecord
    {
        public FishingCatchRecord()
        {
            FishingCatchRecordFiles = new HashSet<FishingCatchRecordFile>();
            FishingCatchRecordFishes = new HashSet<FishingCatchRecordFish>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Билет за любителски риболов
        /// </summary>
        [Column("TicketID")]
        public int TicketId { get; set; }
        /// <summary>
        /// Дата на улов
        /// </summary>
        public DateTime CatchDate { get; set; }
        /// <summary>
        /// Воден обект
        /// </summary>
        [StringLength(500)]
        public string WaterArea { get; set; }
        /// <summary>
        /// Координати на улова
        /// </summary>
        [Column(TypeName = "geometry(Point)")]
        public Point Coordinates { get; set; }
        /// <summary>
        /// Описание на улова 
        /// </summary>
        [StringLength(4000)]
        public string Description { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(TicketId))]
        [InverseProperty(nameof(FishingTicket.FishingCatchRecords))]
        public virtual FishingTicket Ticket { get; set; }
        [InverseProperty(nameof(FishingCatchRecordFile.Record))]
        public virtual ICollection<FishingCatchRecordFile> FishingCatchRecordFiles { get; set; }
        [InverseProperty(nameof(FishingCatchRecordFish.CatchRecord))]
        public virtual ICollection<FishingCatchRecordFish> FishingCatchRecordFishes { get; set; }
    }
}