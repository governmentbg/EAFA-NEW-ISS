// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// FLAP Р·Р°СЏРІРєРё
    /// </summary>
    [Table("FLUXACDRReports", Schema = "iss")]
    [Index("FluxfvmsrequestId", Name = "IXFK_FLUXACDRReports_FLUXFVMSRequests")]
    public partial class Fluxacdrreport
    {         public Fluxacdrreport()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// РЈРЅРёРєР°Р»РµРЅ РёРґРµРЅС‚РёС„РёРєР°С‚РѕСЂ
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// FLUXFVMSRequest Р·Р°РїРёСЃ
        /// </summary>
        [Column("FLUXFVMSRequestID")]
        public int FluxfvmsrequestId { get; set; }
        /// <summary>
        /// РќР°С‡Р°Р»РЅР° РґР°С‚Р° РЅР° РґР°РЅРЅРёС‚Рµ РІ СЂРµРїРѕСЂС‚Р°
        /// </summary>
        public DateTime PeriodStart { get; set; }
        /// <summary>
        /// РљСЂР°Р№РЅР° РґР°С‚Р° РЅР° РґР°РЅРЅРёС‚Рµ РІ СЂРµРїРѕСЂС‚Р°	
        /// </summary>
        public DateTime PeriodEnd { get; set; }
        /// <summary>
        /// Р¤Р»Р°Рі РґР°Р»Рё РѕС‚С‡РµС‚Р° Рµ РёР·С‚РµРіР»РµРЅ Рё РєР°С‡РµРЅ СЃ РјРѕРґРёС„РёРєР°С†РёРё РѕС‚ СЃР»СѓР¶РёС‚РµР»
        /// </summary>
        public bool? IsModified { get; set; }
        /// <summary>
        /// РЎС‚Р°С‚СѓСЃ РЅР° РѕС‚С‡РµС‚Р° (GENERATED - РђРІС‚РѕРјР°С‚РёС‡РЅРѕ РіРµРЅРµСЂРёСЂР°РЅ РЅР° РїРµСЂРёРѕРґ / MANUAL - Р СЉС‡РЅРѕ РіРµРЅРµСЂРёСЂР°РЅ РѕС‚ СЃР»СѓР¶РёС‚РµР» / DOWNLOADED - РёР·С‚РµРіР»РµРЅ Р·Р° РїСЂРµРіР»РµРґ / UPLOADED - РљР°С‡РµРЅ РєРѕСЂРёРіРёСЂР°РЅ / SENT - РёР·РїСЂР°С‚РµРЅ РєСЉРј FLUX )
        /// </summary>
        [StringLength(20)]
        public string ReportStatus { get; set; }
        /// <summary>
        /// Р¤Р»Р°Рі РґР°Р»Рё Р·Р°РїРёСЃСЉС‚ Рµ Р°РєС‚РёРІРµРЅ РёР»Рё РёР·С‚СЂРёС‚
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// РџРѕС‚СЂРµР±РёС‚РµР» СЃСЉР·РґР°Р» Р·Р°РїРёСЃР°
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Р”Р°С‚Р° Рё С‡Р°СЃ РЅР° СЃСЉР·РґР°РІР°РЅРµ РЅР° Р·Р°РїРёСЃР°
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// РџРѕС‚СЂРµР±РёС‚РµР» РїРѕСЃР»РµРґРЅРѕ Р°РєС‚СѓР°Р»РёР·РёСЂР°Р» Р·Р°РїРёСЃР°
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Р”Р°С‚Р° Рё С‡Р°СЃ РЅР° РїРѕСЃР»РµРґРЅР° Р°РєС‚СѓР°Р»РёР·Р°С†РёСЏ РЅР° Р·Р°РїРёСЃР°
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey("FluxfvmsrequestId")]
        [InverseProperty("Fluxacdrreports")]
        public virtual Fluxfvmsrequest Fluxfvmsrequest { get; set; }
    }
}
