// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Типове кораби в корабен регистър
    /// </summary>
    [Table("NVesselTypes", Schema = "RShips")]
    [Index(nameof(MdrVesselTypeId), Name = "IXFK_NVesselTypes_MDR_Vessel_Type")]
    [Index(nameof(ParentVesselTypeId), Name = "IXFK_RS_NVesselTypes_RS_NVesselTypes")]
    [Index(nameof(Code), nameof(ValidTo), Name = "UK_RS_NVesselTypes", IsUnique = true)]
    public partial class NvesselType
    {
        public NvesselType()
        {
            InspectionVessels = new HashSet<InspectionVessel>();
            InverseParentVesselType = new HashSet<NvesselType>();
            ShipRegisters = new HashSet<ShipRegister>();
            UnregisteredVessels = new HashSet<UnregisteredVessel>();
        }

        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Код
        /// </summary>
        [StringLength(50)]
        public string Code { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Name { get; set; }
        [Column("ParentVesselTypeID")]
        public int? ParentVesselTypeId { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// FLUX ID
        /// </summary>
        [Column("MDR_Vessel_Type_ID")]
        public int? MdrVesselTypeId { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(MdrVesselTypeId))]
        [InverseProperty("NvesselTypes")]
        public virtual MdrVesselType MdrVesselType { get; set; }
        [ForeignKey(nameof(ParentVesselTypeId))]
        [InverseProperty(nameof(NvesselType.InverseParentVesselType))]
        public virtual NvesselType ParentVesselType { get; set; }
        [InverseProperty(nameof(InspectionVessel.VesselType))]
        public virtual ICollection<InspectionVessel> InspectionVessels { get; set; }
        [InverseProperty(nameof(NvesselType.ParentVesselType))]
        public virtual ICollection<NvesselType> InverseParentVesselType { get; set; }
        [InverseProperty(nameof(ShipRegister.VesselType))]
        public virtual ICollection<ShipRegister> ShipRegisters { get; set; }
        [InverseProperty(nameof(UnregisteredVessel.VesselType))]
        public virtual ICollection<UnregisteredVessel> UnregisteredVessels { get; set; }
    }
}