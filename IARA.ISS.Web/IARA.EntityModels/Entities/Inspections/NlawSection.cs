// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Секции на закони и тяхното описание
    /// </summary>
    [Table("NLawSections", Schema = "RInsp")]
    [Index("LawId", Name = "IXFK_NLawSections_NLaws")]
    [Index("ValidTo", "Article", "Paragraph", "Section", "Letter", Name = "UK_RInsp_NLawSections", IsUnique = true)]
    public partial class NlawSection
    {
        public NlawSection()
        {
            AuanconfiscatedFishes = new HashSet<AuanconfiscatedFish>();
            ViolatedRegulations = new HashSet<ViolatedRegulation>();
        }

        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("LawID")]
        public int? LawId { get; set; }
        /// <summary>
        /// Член
        /// </summary>
        [Required]
        [StringLength(200)]
        public string Article { get; set; }
        /// <summary>
        /// Алинея
        /// </summary>
        [StringLength(10)]
        public string Paragraph { get; set; }
        /// <summary>
        /// Точка
        /// </summary>
        [StringLength(10)]
        public string Section { get; set; }
        /// <summary>
        /// Буква
        /// </summary>
        [StringLength(10)]
        public string Letter { get; set; }
        /// <summary>
        /// Съдържание на точката
        /// </summary>
        [Required]
        [StringLength(4000)]
        public string LawText { get; set; }
        /// <summary>
        /// Начална дата на валидност на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime ValidFrom { get; set; }
        /// <summary>
        /// Крайна дата на валидност на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime ValidTo { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey("LawId")]
        [InverseProperty("NlawSections")]
        public virtual Nlaw Law { get; set; }
        [InverseProperty("LawSection")]
        public virtual ICollection<AuanconfiscatedFish> AuanconfiscatedFishes { get; set; }
        [InverseProperty("LawSection")]
        public virtual ICollection<ViolatedRegulation> ViolatedRegulations { get; set; }
    }
}