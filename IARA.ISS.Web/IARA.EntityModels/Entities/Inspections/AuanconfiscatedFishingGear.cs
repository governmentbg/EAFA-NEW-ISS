// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Конфискувани риболовни уреди към АУАН
    /// </summary>
    [Table("AUANConfiscatedFishingGear", Schema = "RInsp")]
    [Index(nameof(AuanregisterId), Name = "IXFK_AUANConfiscatedFishingGear_AUANRegister")]
    [Index(nameof(ConfiscationActionId), Name = "IXFK_AUANConfiscatedFishingGear_NConfiscationActions")]
    [Index(nameof(FishingGearId), Name = "IXFK_AUANConfiscatedFishingGear_NFishingGears")]
    public partial class AuanconfiscatedFishingGear
    {         public AuanconfiscatedFishingGear()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// АУАН
        /// </summary>
        [Column("AUANRegisterID")]
        public int AuanregisterId { get; set; }
        /// <summary>
        /// Риболовен уред
        /// </summary>
        [Column("FishingGearID")]
        public int? FishingGearId { get; set; }
        /// <summary>
        /// Брой
        /// </summary>
        public int Count { get; set; }
        /// <summary>
        /// Дължина
        /// </summary>
        public decimal? Length { get; set; }
        /// <summary>
        /// Размер на окото
        /// </summary>
        public decimal? NetEyeSize { get; set; }
        /// <summary>
        /// Бележки
        /// </summary>
        [StringLength(2000)]
        public string Comments { get; set; }
        /// <summary>
        /// Предприето действие
        /// </summary>
        [Column("ConfiscationActionID")]
        public int ConfiscationActionId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AuanregisterId))]
        [InverseProperty("AuanconfiscatedFishingGears")]
        public virtual Auanregister Auanregister { get; set; }
        [ForeignKey(nameof(ConfiscationActionId))]
        [InverseProperty(nameof(NconfiscationAction.AuanconfiscatedFishingGears))]
        public virtual NconfiscationAction ConfiscationAction { get; set; }
        [ForeignKey(nameof(FishingGearId))]
        [InverseProperty(nameof(NfishingGear.AuanconfiscatedFishingGears))]
        public virtual NfishingGear FishingGear { get; set; }
    }
}
