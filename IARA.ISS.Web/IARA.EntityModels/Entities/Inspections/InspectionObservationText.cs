// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Текстове за наблюдение и нарушение за дадена инспекция
    /// </summary>
    [Table("InspectionObservationTexts", Schema = "RInsp")]
    [Index(nameof(InspectionId), Name = "IXFK_InspObsTexts_InspectionRegister")]
    [Index(nameof(InspectionTextCategoryId), Name = "IXFK_InspObsTexts_NInspectionObservationTextCategories")]
    [Index(nameof(InspectionId), nameof(InspectionTextCategoryId), Name = "UK_RInsp_InspectionObservationTexts", IsUnique = true)]
    public partial class InspectionObservationText
    {         public InspectionObservationText()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Инспекция
        /// </summary>
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Тип категория
        /// </summary>
        [Column("InspectionTextCategoryID")]
        public int InspectionTextCategoryId { get; set; }
        [StringLength(4000)]
        public string ObservationsOrViolationsText { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.InspectionObservationTexts))]
        public virtual InspectionRegister Inspection { get; set; }
        [ForeignKey(nameof(InspectionTextCategoryId))]
        [InverseProperty(nameof(NinspectionObservationTextCategory.InspectionObservationTexts))]
        public virtual NinspectionObservationTextCategory InspectionTextCategory { get; set; }
    }
}
