// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using NetTopologySuite.Geometries;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Инспекции на любители рибари
    /// </summary>
    [Table("FishermanInspections", Schema = "RInsp")]
    [Index(nameof(InspectionLocationZoneId), Name = "IXFK_FishermanInspections_NCatchZones")]
    [Index(nameof(UnregisteredPersonId), Name = "IXFK_FishermanInspections_UnregisteredPersons")]
    public partial class FishermanInspection
    {         public FishermanInspection()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Инспекция
        /// </summary>
        [Key]
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Уникален номер на билет
        /// </summary>
        [StringLength(50)]
        public string TicketNum { get; set; }
        [Column("UnregisteredPersonID")]
        public int? UnregisteredPersonId { get; set; }
        /// <summary>
        /// Брой въдици
        /// </summary>
        public int? FishingRodCount { get; set; }
        public int? FishingHooksCount { get; set; }
        /// <summary>
        /// Коментар на рибар
        /// </summary>
        [StringLength(4000)]
        public string FishermanComment { get; set; }
        /// <summary>
        /// Локация на инспекцията - описание
        /// </summary>
        [StringLength(500)]
        public string InspectionLocation { get; set; }
        /// <summary>
        /// Локация на инспекцията - координати
        /// </summary>
        [Column(TypeName = "geometry(Point)")]
        public Point InpectionLocationCoordinates { get; set; }
        [Column("InspectionLocationZoneID")]
        public int? InspectionLocationZoneId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }

        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.FishermanInspection))]
        public virtual InspectionRegister Inspection { get; set; }
        [ForeignKey(nameof(InspectionLocationZoneId))]
        [InverseProperty(nameof(NcatchZone.FishermanInspections))]
        public virtual NcatchZone InspectionLocationZone { get; set; }
        [ForeignKey(nameof(UnregisteredPersonId))]
        [InverseProperty("FishermanInspections")]
        public virtual UnregisteredPerson UnregisteredPerson { get; set; }
    }
}
