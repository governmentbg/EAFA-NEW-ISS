// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using NetTopologySuite.Geometries;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Инспекции при първа продажба
    /// </summary>
    [Table("AquacultureInspections", Schema = "RInsp")]
    [Index(nameof(AquacultureRegisterId), Name = "IXFK_AquacultureInspections_AquacultureFacilityRegister")]
    public partial class AquacultureInspection
    {         public AquacultureInspection()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Инспекция
        /// </summary>
        [Key]
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Регистрирано аквакултурно стопанство
        /// </summary>
        [Column("AquacultureRegisterID")]
        public int? AquacultureRegisterId { get; set; }
        /// <summary>
        /// Други открити средства за риболов
        /// </summary>
        [StringLength(4000)]
        public string OtherFishingToolsDescription { get; set; }
        /// <summary>
        /// Коментар на представител
        /// </summary>
        [StringLength(4000)]
        public string RepresentativeComment { get; set; }
        /// <summary>
        /// Координати на точката (WGS84)
        /// </summary>
        [Column(TypeName = "geometry(Point)")]
        public Point Coordinates { get; set; }
        [StringLength(500)]
        public string LocationDescription { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AquacultureRegisterId))]
        [InverseProperty(nameof(AquacultureFacilityRegister.AquacultureInspections))]
        public virtual AquacultureFacilityRegister AquacultureRegister { get; set; }
        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.AquacultureInspection))]
        public virtual InspectionRegister Inspection { get; set; }
    }
}
