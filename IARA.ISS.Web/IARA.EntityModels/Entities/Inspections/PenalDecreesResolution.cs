// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Резолюции за наказателни постановления
    /// </summary>
    [Table("PenalDecreesResolutions", Schema = "RInsp")]
    [Index("PenalDecreeId", Name = "IXFK_PenalDecreesResolutions_PenalDecreesRegister")]
    [Index("PenalDecreeId", Name = "UK_RInsp_PenalDecreesResolutions", IsUnique = true)]
    public partial class PenalDecreesResolution
    {         public PenalDecreesResolution()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// АУАН
        /// </summary>
        [Column("PenalDecreeID")]
        public int PenalDecreeId { get; set; }
        /// <summary>
        /// Причини за прекратяване на административнонаказателното производство с резолюци
        /// </summary>
        [StringLength(4000)]
        public string Reasons { get; set; }
        /// <summary>
        /// Мотивите, които налагат прекратяване на административнонаказателното производство с резолюция и законовите разпоредби съгл. чл. 54, ал. 1 и 2 от ЗАНН и ЗРА
        /// </summary>
        [StringLength(4000)]
        public string Motives { get; set; }
        /// <summary>
        /// Резолюция и въз основа на чл. 54, ал. 1 , т….. от ЗАНН
        /// </summary>
        [Column("ZANN")]
        [StringLength(500)]
        public string Zann { get; set; }
        /// <summary>
        /// На основание чл. 90, ал. 1 от Закона за рибарството и аквакултурите, ??? 
        /// </summary>
        [Column("ZRA")]
        [StringLength(500)]
        public string Zra { get; set; }
        /// <summary>
        /// РАЗПОРЕЖДАМ /посочва се в случай, че е необходимо разпореждане с веществени доказателства/
        /// </summary>
        [StringLength(4000)]
        public string MaterialEvidence { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        [Column(TypeName = "timestamp without time zone")]
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey("PenalDecreeId")]
        [InverseProperty("PenalDecreesResolution")]
        public virtual PenalDecreesRegister PenalDecree { get; set; }
    }
}
