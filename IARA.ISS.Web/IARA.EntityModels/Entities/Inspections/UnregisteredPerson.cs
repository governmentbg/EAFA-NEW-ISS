// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Физически лица - без идентификационни данни
    /// </summary>
    [Table("UnregisteredPersons", Schema = "RInsp")]
    [Index(nameof(CitizenshipCountryId), Name = "IXFK_UnregisteredPersons_NCountries")]
    public partial class UnregisteredPerson
    {
        public UnregisteredPerson()
        {
            FishermanInspections = new HashSet<FishermanInspection>();
            InspectedPeople = new HashSet<InspectedPerson>();
            Inspectors = new HashSet<Inspector>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Име
        /// </summary>
        [StringLength(200)]
        public string FirstName { get; set; }
        /// <summary>
        /// Бащино име
        /// </summary>
        [StringLength(200)]
        public string MiddleName { get; set; }
        /// <summary>
        /// Фамилия
        /// </summary>
        [StringLength(200)]
        public string LastName { get; set; }
        /// <summary>
        /// Тип на идентификатора (ЕГН=EGN / ЛНЧ=LNC / Чужденец=FORID / Юридическо лице=LEGAL)
        /// </summary>
        [StringLength(20)]
        public string IdentifierType { get; set; }
        /// <summary>
        /// Идентификатор на лицето - ЕГН / ЛНЧ
        /// </summary>
        [Column("EGN_LNC")]
        [StringLength(20)]
        public string EgnLnc { get; set; }
        /// <summary>
        /// Адрес
        /// </summary>
        [StringLength(4000)]
        public string Address { get; set; }
        /// <summary>
        /// Гражданство - държава
        /// </summary>
        [Column("CitizenshipCountryID")]
        public int? CitizenshipCountryId { get; set; }
        /// <summary>
        /// Флаг дали притежава булгарска адресна регистрация
        /// </summary>
        public bool? HasBulgarianAddressRegistration { get; set; }
        /// <summary>
        /// Забележки
        /// </summary>
        [StringLength(4000)]
        public string Comments { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(CitizenshipCountryId))]
        [InverseProperty(nameof(Ncountry.UnregisteredPeople))]
        public virtual Ncountry CitizenshipCountry { get; set; }
        [InverseProperty(nameof(FishermanInspection.UnregisteredPerson))]
        public virtual ICollection<FishermanInspection> FishermanInspections { get; set; }
        [InverseProperty(nameof(InspectedPerson.UnregisteredPerson))]
        public virtual ICollection<InspectedPerson> InspectedPeople { get; set; }
        [InverseProperty(nameof(Inspector.UnregisteredPerson))]
        public virtual ICollection<Inspector> Inspectors { get; set; }
    }
}