// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Връчване на АУАН/НП
    /// </summary>
    [Table("InspDelivery", Schema = "RInsp")]
    [Index(nameof(AddressId), Name = "IXFK_InspDelivery_Addresses")]
    [Index(nameof(ConfirmationTypeId), Name = "IXFK_InspDelivery_NInspDeliveryConfirmationTypes")]
    [Index(nameof(DeliveryTypeId), Name = "IXFK_InspDelivery_NInspDeliveryTypes")]
    [Index(nameof(TerritoryUnitId), Name = "IXFK_InspDelivery_NTerritoryUnits")]
    public partial class InspDelivery
    {
        public InspDelivery()
        {
            Auanregisters = new HashSet<Auanregister>();
            Auanwitnesses = new HashSet<Auanwitness>();
            PenalDecreesRegisters = new HashSet<PenalDecreesRegister>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Тип на връчване
        /// </summary>
        [Column("DeliveryTypeID")]
        public int DeliveryTypeId { get; set; }
        /// <summary>
        /// Флаг дали желае да бъде връчено през eDelivery
        /// </summary>
        [Column("IsEDeliveryRequested")]
        public bool? IsEdeliveryRequested { get; set; }
        /// <summary>
        /// Дата на изпращане
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? SentDate { get; set; }
        /// <summary>
        /// Дата на връчване
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? DeliveryDate { get; set; }
        /// <summary>
        /// Референтен номер
        /// </summary>
        [StringLength(500)]
        public string ReferenceNum { get; set; }
        /// <summary>
        /// Държавен орган / служба
        /// </summary>
        [StringLength(200)]
        public string StateService { get; set; }
        /// <summary>
        /// Териториално звено при връчване в офис на ИАРА
        /// </summary>
        [Column("TerritoryUnitID")]
        public int? TerritoryUnitId { get; set; }
        /// <summary>
        /// Флаг дали АУАН-ът/НП е връчен (или потвърден)
        /// </summary>
        public bool IsDelivered { get; set; }
        /// <summary>
        /// Тип на потвърждение за връчване
        /// </summary>
        [Column("ConfirmationTypeID")]
        public int? ConfirmationTypeId { get; set; }
        /// <summary>
        /// Дата на отказ
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? RefusalDate { get; set; }
        /// <summary>
        /// Адрес за доставка
        /// </summary>
        [Column("AddressID")]
        public int? AddressId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AddressId))]
        [InverseProperty("InspDeliveries")]
        public virtual Address Address { get; set; }
        [ForeignKey(nameof(ConfirmationTypeId))]
        [InverseProperty(nameof(NinspDeliveryConfirmationType.InspDeliveries))]
        public virtual NinspDeliveryConfirmationType ConfirmationType { get; set; }
        [ForeignKey(nameof(DeliveryTypeId))]
        [InverseProperty(nameof(NinspDeliveryType.InspDeliveries))]
        public virtual NinspDeliveryType DeliveryType { get; set; }
        [ForeignKey(nameof(TerritoryUnitId))]
        [InverseProperty(nameof(NterritoryUnit.InspDeliveries))]
        public virtual NterritoryUnit TerritoryUnit { get; set; }
        [InverseProperty(nameof(Auanregister.Delivery))]
        public virtual ICollection<Auanregister> Auanregisters { get; set; }
        [InverseProperty(nameof(Auanwitness.InspDelivery))]
        public virtual ICollection<Auanwitness> Auanwitnesses { get; set; }
        [InverseProperty(nameof(PenalDecreesRegister.Delivery))]
        public virtual ICollection<PenalDecreesRegister> PenalDecreesRegisters { get; set; }
    }
}