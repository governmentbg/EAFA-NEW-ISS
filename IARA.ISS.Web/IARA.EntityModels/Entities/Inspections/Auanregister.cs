// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Регистър АУАН
    /// </summary>
    [Table("AUANRegister", Schema = "RInsp")]
    [Index(nameof(DeliveryId), Name = "IXFK_AUANRegister_InspDelivery")]
    [Index(nameof(InspectionId), Name = "IXFK_AUANRegister_InspectionsRegister")]
    [Index(nameof(InspectedLegalId), Name = "IXFK_AUANRegister_Legals")]
    [Index(nameof(StatusId), Name = "IXFK_AUANRegister_NAUANStatuses")]
    [Index(nameof(InspectedPersonId), Name = "IXFK_AUANRegister_Persons")]
    [Index(nameof(AuanNum), Name = "UK_RInsp_AUANRegister", IsUnique = true)]
    public partial class Auanregister
    {
        public Auanregister()
        {
            AuanconfiscatedFishes = new HashSet<AuanconfiscatedFish>();
            AuanconfiscatedFishingGears = new HashSet<AuanconfiscatedFishingGear>();
            AuanregisterFiles = new HashSet<AuanregisterFile>();
            AuanviolatedRegulations = new HashSet<AuanviolatedRegulation>();
            Auanwitnesses = new HashSet<Auanwitness>();
            PenalDecreesRegisters = new HashSet<PenalDecreesRegister>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Инспекция
        /// </summary>
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Статус
        /// </summary>
        [Column("StatusID")]
        public int? StatusId { get; set; }
        /// <summary>
        /// № на АУАН
        /// </summary>
        [Required]
        [StringLength(100)]
        public string AuanNum { get; set; }
        /// <summary>
        /// Дата на съставяне
        /// </summary>
        public DateTime DraftDate { get; set; }
        /// <summary>
        /// Описание на проверявания обект
        /// </summary>
        [Required]
        [StringLength(400)]
        public string LocationDescription { get; set; }
        /// <summary>
        /// Проверявано физическо лице
        /// </summary>
        [Column("InspectedPersonID")]
        public int? InspectedPersonId { get; set; }
        /// <summary>
        /// Проверявано юридическо лице
        /// </summary>
        [Column("InspectedLegalID")]
        public int? InspectedLegalId { get; set; }
        /// <summary>
        /// Месторабота на проверявано физическо лице
        /// </summary>
        [StringLength(100)]
        public string InspectedPersonWorkPlace { get; set; }
        /// <summary>
        /// Длъжност на проверявано физическо лице
        /// </summary>
        [StringLength(100)]
        public string InspectedPersonWorkPosition { get; set; }
        /// <summary>
        /// Бележки относно констатациите
        /// </summary>
        [StringLength(4000)]
        public string ConstatationComments { get; set; }
        /// <summary>
        /// Бележки от нарушителя
        /// </summary>
        [StringLength(4000)]
        public string OffenderComments { get; set; }
        /// <summary>
        /// Връчване
        /// </summary>
        [Column("DeliveryID")]
        public int DeliveryId { get; set; }
        /// <summary>
        /// Постъпило възражение на АУАН
        /// </summary>
        public bool HasObjection { get; set; }
        /// <summary>
        /// Дата на възражение
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? ObjectionDate { get; set; }
        /// <summary>
        /// Прекратен или частично прекратен/изменен
        /// </summary>
        [StringLength(50)]
        public string ResolutionType { get; set; }
        /// <summary>
        /// Номер на резолюцията
        /// </summary>
        [StringLength(50)]
        public string ResolutionNum { get; set; }
        /// <summary>
        /// Дата на резолюцията
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? ResolutionDate { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(DeliveryId))]
        [InverseProperty(nameof(InspDelivery.Auanregisters))]
        public virtual InspDelivery Delivery { get; set; }
        [ForeignKey(nameof(InspectedLegalId))]
        [InverseProperty(nameof(Legal.Auanregisters))]
        public virtual Legal InspectedLegal { get; set; }
        [ForeignKey(nameof(InspectedPersonId))]
        [InverseProperty(nameof(Person.Auanregisters))]
        public virtual Person InspectedPerson { get; set; }
        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.Auanregisters))]
        public virtual InspectionRegister Inspection { get; set; }
        [ForeignKey(nameof(StatusId))]
        [InverseProperty(nameof(Nauanstatus.Auanregisters))]
        public virtual Nauanstatus Status { get; set; }
        [InverseProperty(nameof(AuanconfiscatedFish.Auanregister))]
        public virtual ICollection<AuanconfiscatedFish> AuanconfiscatedFishes { get; set; }
        [InverseProperty(nameof(AuanconfiscatedFishingGear.Auanregister))]
        public virtual ICollection<AuanconfiscatedFishingGear> AuanconfiscatedFishingGears { get; set; }
        [InverseProperty(nameof(AuanregisterFile.Record))]
        public virtual ICollection<AuanregisterFile> AuanregisterFiles { get; set; }
        [InverseProperty(nameof(AuanviolatedRegulation.Auanregister))]
        public virtual ICollection<AuanviolatedRegulation> AuanviolatedRegulations { get; set; }
        [InverseProperty(nameof(Auanwitness.Auanregister))]
        public virtual ICollection<Auanwitness> Auanwitnesses { get; set; }
        [InverseProperty(nameof(PenalDecreesRegister.AuanRegister))]
        public virtual ICollection<PenalDecreesRegister> PenalDecreesRegisters { get; set; }
    }
}