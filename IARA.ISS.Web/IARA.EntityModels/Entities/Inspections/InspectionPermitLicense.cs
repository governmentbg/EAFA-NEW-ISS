// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Проверени удостоверения за стопански риболов по време на инспекция
    /// </summary>
    [Table("InspectionPermitLicenses", Schema = "RInsp")]
    [Index(nameof(InspectionId), Name = "IXFK_InspectionPermitLicences_InspectionRegister")]
    [Index(nameof(PermitLicenseId), Name = "IXFK_InspectionPermitLicences_PermitLicensesRegister")]
    [Index(nameof(InspectionId), nameof(InspectedShipType), nameof(PermitLicenseId), nameof(UnregisteredLicenseNum), Name = "UK_RInsp_InspectionPermitLicences", IsUnique = true)]
    public partial class InspectionPermitLicense
    {         public InspectionPermitLicense()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Вид на иснпектирания кораб (Inspected / TransboardSender / TransbroardReceiver )
        /// </summary>
        [Required]
        [StringLength(20)]
        public string InspectedShipType { get; set; }
        /// <summary>
        /// Инспекция
        /// </summary>
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Удостоверението отговаря на регистрираното ( Y / N / X / null )
        /// </summary>
        [Required]
        [StringLength(1)]
        public string CheckPermitLicenseMatches { get; set; }
        /// <summary>
        /// Удостоверение, за което е проверката
        /// </summary>
        [Column("PermitLicenseID")]
        public int? PermitLicenseId { get; set; }
        /// <summary>
        /// Регистрационен номер на удостоверение, ако не е налично в системата
        /// </summary>
        [StringLength(50)]
        public string UnregisteredLicenseNum { get; set; }
        /// <summary>
        /// Детайли, въведени от инспектор
        /// </summary>
        [StringLength(200)]
        public string Description { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.InspectionPermitLicenses))]
        public virtual InspectionRegister Inspection { get; set; }
        [ForeignKey(nameof(PermitLicenseId))]
        [InverseProperty(nameof(PermitLicensesRegister.InspectionPermitLicenses))]
        public virtual PermitLicensesRegister PermitLicense { get; set; }
    }
}
