// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Използвани средства за наблюдение на кораб от инспектиращ кораб или Централа за наблюдение на кораби (по време на проверка или инспекция)
    /// </summary>
    [Table("InspectionObservationTools", Schema = "RInsp")]
    [Index(nameof(InspectionId), Name = "IXFK_InspectionObservationTools_InspectionsRegister")]
    [Index(nameof(ObservationToolId), Name = "IXFK_InspectionObservationTools_NObservationTools")]
    [Index(nameof(ObservationToolId), nameof(InspectionId), nameof(IsOnBoard), Name = "UK_RInsp_InspectionObservationTools", IsUnique = true)]
    public partial class InspectionObservationTool
    {         public InspectionObservationTool()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Инспекция
        /// </summary>
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Вид средство за наблюдение (бинокъл, радар, AIS, VMS, друго...)
        /// </summary>
        [Column("ObservationToolID")]
        public int ObservationToolId { get; set; }
        /// <summary>
        /// Име на средство за наблюдение от тип &quot;Други&quot;
        /// </summary>
        [StringLength(100)]
        public string ObservationToolDesc { get; set; }
        /// <summary>
        /// Дали инструментът се използва от борда на инспектиращия кораб, или от Център за наблюдение
        /// </summary>
        public bool IsOnBoard { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.InspectionObservationTools))]
        public virtual InspectionRegister Inspection { get; set; }
        [ForeignKey(nameof(ObservationToolId))]
        [InverseProperty(nameof(NobservationTool.InspectionObservationTools))]
        public virtual NobservationTool ObservationTool { get; set; }
    }
}
