// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Инспектори за дадена инспекция
    /// </summary>
    [Table("InspectionVesselActivities", Schema = "RInsp")]
    [Index(nameof(InspectionId), Name = "IXFK_InspectionVesselActivities_InspectionsRegister")]
    [Index(nameof(VesselActivityId), Name = "IXFK_InspectionVesselActivities_NVesselActivities")]
    [Index(nameof(VesselActivityId), nameof(InspectionId), Name = "UK_RInsp_InspectionVesselActivities", IsUnique = true)]
    public partial class InspectionVesselActivity
    {         public InspectionVesselActivity()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Инспекция
        /// </summary>
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Тип дейност на кораб
        /// </summary>
        [Column("VesselActivityID")]
        public int VesselActivityId { get; set; }
        /// <summary>
        /// Описание
        /// </summary>
        [StringLength(4000)]
        public string ActivityDescr { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.InspectionVesselActivities))]
        public virtual InspectionRegister Inspection { get; set; }
        [ForeignKey(nameof(VesselActivityId))]
        [InverseProperty(nameof(NvesselActivity.InspectionVesselActivities))]
        public virtual NvesselActivity VesselActivity { get; set; }
    }
}
