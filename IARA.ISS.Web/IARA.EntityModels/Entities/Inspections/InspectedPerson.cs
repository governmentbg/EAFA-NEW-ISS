// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Лица, установени по време на инспекция 
    /// </summary>
    [Table("InspectedPersons", Schema = "RInsp")]
    [Index(nameof(AddressId), Name = "IXFK_InspectedPersons_Addresses")]
    [Index(nameof(InspectedPersonTypeId), Name = "IXFK_InspectedPersons_NInspectedPersonTypes")]
    [Index(nameof(PersonId), Name = "IXFK_InspectedPersons_Persons")]
    [Index(nameof(UnregisteredPersonId), Name = "IXFK_InspectedPersons_UnregisteredPersons")]
    [Index(nameof(BuyerId), Name = "IXFK_InspectedShipPersonnel_BuyerRegister")]
    [Index(nameof(CaptainFishermenId), Name = "IXFK_InspectedShipPersonnel_FishermenRegister")]
    [Index(nameof(InspectionId), Name = "IXFK_InspectedShipPersonnel_InspectionRegister")]
    [Index(nameof(LegalId), Name = "IXFK_InspectedShipPersonnel_Legals")]
    public partial class InspectedPerson
    {         public InspectedPerson()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Вид на иснпектирания кораб (Inspected / TransboardSender / TransbroardReceiver )
        /// </summary>
        [Required]
        [StringLength(20)]
        public string InspectedShipType { get; set; }
        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Тип на проверявано лице (Собственик, Ползвател, Купувач, Капитан, ...)
        /// </summary>
        [Column("InspectedPersonTypeID")]
        public int InspectedPersonTypeId { get; set; }
        /// <summary>
        /// Собственик -&gt; ShipOwners
        /// </summary>
        [Column("PersonID")]
        public int? PersonId { get; set; }
        [Column("LegalID")]
        public int? LegalId { get; set; }
        /// <summary>
        /// Адрес на ЮЛ или ФЛ
        /// </summary>
        [Column("AddressID")]
        public int? AddressId { get; set; }
        /// <summary>
        /// Регистриран купувач
        /// </summary>
        [Column("BuyerID")]
        public int? BuyerId { get; set; }
        /// <summary>
        /// Капитан -&gt; FishermenRegister
        /// </summary>
        [Column("CaptainFishermenID")]
        public int? CaptainFishermenId { get; set; }
        /// <summary>
        /// Капитан -&gt; UnregisteredPersons
        /// </summary>
        [Column("UnregisteredPersonID")]
        public int? UnregisteredPersonId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AddressId))]
        [InverseProperty("InspectedPeople")]
        public virtual Address Address { get; set; }
        [ForeignKey(nameof(BuyerId))]
        [InverseProperty(nameof(BuyerRegister.InspectedPeople))]
        public virtual BuyerRegister Buyer { get; set; }
        [ForeignKey(nameof(CaptainFishermenId))]
        [InverseProperty(nameof(FishermenRegister.InspectedPeople))]
        public virtual FishermenRegister CaptainFishermen { get; set; }
        [ForeignKey(nameof(InspectedPersonTypeId))]
        [InverseProperty(nameof(NinspectedPersonType.InspectedPeople))]
        public virtual NinspectedPersonType InspectedPersonType { get; set; }
        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.InspectedPeople))]
        public virtual InspectionRegister Inspection { get; set; }
        [ForeignKey(nameof(LegalId))]
        [InverseProperty("InspectedPeople")]
        public virtual Legal Legal { get; set; }
        [ForeignKey(nameof(PersonId))]
        [InverseProperty("InspectedPeople")]
        public virtual Person Person { get; set; }
        [ForeignKey(nameof(UnregisteredPersonId))]
        [InverseProperty("InspectedPeople")]
        public virtual UnregisteredPerson UnregisteredPerson { get; set; }
    }
}
