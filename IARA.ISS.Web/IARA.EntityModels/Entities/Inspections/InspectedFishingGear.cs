// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Риболовни уреди за инспекция
    /// </summary>
    [Table("InspectedFishingGears", Schema = "RInsp")]
    [Index(nameof(InspectedFishingGearId), Name = "IXFK_InspectedFishingGears_FishingGearRegister_Inspected")]
    [Index(nameof(RegisteredFishingGearId), Name = "IXFK_InspectedFishingGears_FishingGearRegister_Registered")]
    [Index(nameof(InspectionId), Name = "IXFK_InspectedFishingGears_InspectionRegister")]
    [Index(nameof(InspectionId), nameof(InspectedFishingGearId), Name = "UK_RInsp_InspectedFishingGears_InspectedGear", IsUnique = true)]
    [Index(nameof(InspectionId), nameof(RegisteredFishingGearId), Name = "UK_RInsp_InspectedFishingGears_RegisteredGear", IsUnique = true)]
    public partial class InspectedFishingGear
    {         public InspectedFishingGear()
        {
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// Инспекция
        /// </summary>
        [Column("InspectionID")]
        public int InspectionId { get; set; }
        /// <summary>
        /// Риболовен уред, който е инспектиран
        /// </summary>
        [Column("InspectedFishingGearID")]
        public int? InspectedFishingGearId { get; set; }
        /// <summary>
        /// Регистриран уред, срещу когото е направена инспекцията
        /// </summary>
        [Column("RegisteredFishingGearID")]
        public int? RegisteredFishingGearId { get; set; }
        /// <summary>
        /// Флаг дали инспектираният уред съвпада с регистрираният (Y - съвпада, N - не съвпада, I -нерегистриран уред, намерен при инспекция, R - регистриран уред, неоткрит при инспекция, Null - непопълнено)
        /// </summary>
        [MaxLength(1)]
        public char? CheckInspectedMatchingRegisteredGear { get; set; }
        /// <summary>
        /// Флаг дали е иззет
        /// </summary>
        public bool? IsTaken { get; set; }
        /// <summary>
        /// Флаг дали е съхранен
        /// </summary>
        public bool? IsStored { get; set; }
        /// <summary>
        /// Място на съхранение
        /// </summary>
        [StringLength(500)]
        public string StorageLocation { get; set; }
        /// <summary>
        /// Флаг дали има приспособления за прикачване към риболовния уред
        /// </summary>
        public bool? HasAttachedAppliances { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(InspectedFishingGearId))]
        [InverseProperty(nameof(FishingGearRegister.InspectedFishingGearInspectedFishingGearNavigations))]
        public virtual FishingGearRegister InspectedFishingGearNavigation { get; set; }
        [ForeignKey(nameof(InspectionId))]
        [InverseProperty(nameof(InspectionRegister.InspectedFishingGears))]
        public virtual InspectionRegister Inspection { get; set; }
        [ForeignKey(nameof(RegisteredFishingGearId))]
        [InverseProperty(nameof(FishingGearRegister.InspectedFishingGearRegisteredFishingGears))]
        public virtual FishingGearRegister RegisteredFishingGear { get; set; }
    }
}
