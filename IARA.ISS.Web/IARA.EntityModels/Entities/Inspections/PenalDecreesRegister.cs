// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Регистър Наказателни постановления
    /// </summary>
    [Table("PenalDecreesRegister", Schema = "RInsp")]
    [Index(nameof(AuanRegisterId), Name = "IXFK_PenalDecreesRegister_AUANRegister")]
    [Index(nameof(DeliveryId), Name = "IXFK_PenalDecreesRegister_InspDelivery")]
    [Index(nameof(PenalDecreeTypeId), Name = "IXFK_PenalDecreesRegister_NPenalDecreeTypes")]
    [Index(nameof(IssuerUserId), Name = "IXFK_PenalDecreesRegister_Users")]
    public partial class PenalDecreesRegister
    {
        public PenalDecreesRegister()
        {
            AuanconfiscatedFishes = new HashSet<AuanconfiscatedFish>();
            AuanviolatedRegulations = new HashSet<AuanviolatedRegulation>();
            PenalDecreeFishCompensations = new HashSet<PenalDecreeFishCompensation>();
            PenalDecreeSanctions = new HashSet<PenalDecreeSanction>();
            PenalDecreeSeizedFishingGears = new HashSet<PenalDecreeSeizedFishingGear>();
            PenalDecreeStatuses = new HashSet<PenalDecreeStatus>();
            PenalDecreesRegisterFiles = new HashSet<PenalDecreesRegisterFile>();
            PenalPointsRegisters = new HashSet<PenalPointsRegister>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// АУАН
        /// </summary>
        [Column("AuanRegisterID")]
        public int AuanRegisterId { get; set; }
        /// <summary>
        /// № на наказателното постановление
        /// </summary>
        [Required]
        [StringLength(20)]
        public string DecreeNum { get; set; }
        /// <summary>
        /// Тип Наказателно постановление (Предупреждение, Споразумение, НП)
        /// </summary>
        [Column("PenalDecreeTypeID")]
        public int PenalDecreeTypeId { get; set; }
        /// <summary>
        /// Съставител
        /// </summary>
        [Column("IssuerUserID")]
        public int IssuerUserId { get; set; }
        /// <summary>
        /// Длъжност на съставител
        /// </summary>
        [StringLength(100)]
        public string IssuerPosition { get; set; }
        /// <summary>
        /// Дата на издаване
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime IssueDate { get; set; }
        /// <summary>
        /// Дата на влизане в сила
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime EffectiveDate { get; set; }
        /// <summary>
        /// Описание на санкциите
        /// </summary>
        [StringLength(4000)]
        public string SanctionDescription { get; set; }
        public decimal? FineAmount { get; set; }
        /// <summary>
        /// Размер на обезщетението
        /// </summary>
        public decimal? CompensationAmount { get; set; }
        /// <summary>
        /// Описание на обстоятелствата, които сочат за маловажен случай
        /// </summary>
        [StringLength(4000)]
        public string MinorCircumstancesDescription { get; set; }
        /// <summary>
        /// Подробно описание от АУАН 
        /// </summary>
        [StringLength(4000)]
        public string ConstatationComments { get; set; }
        /// <summary>
        /// Има установена повтаряемост на нарушението
        /// </summary>
        public bool? IsRecurrentViolation { get; set; }
        /// <summary>
        /// Бележки
        /// </summary>
        [StringLength(4000)]
        public string Comments { get; set; }
        /// <summary>
        /// Връчване
        /// </summary>
        [Column("DeliveryID")]
        public int? DeliveryId { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(AuanRegisterId))]
        [InverseProperty(nameof(Auanregister.PenalDecreesRegisters))]
        public virtual Auanregister AuanRegister { get; set; }
        [ForeignKey(nameof(DeliveryId))]
        [InverseProperty(nameof(InspDelivery.PenalDecreesRegisters))]
        public virtual InspDelivery Delivery { get; set; }
        [ForeignKey(nameof(IssuerUserId))]
        [InverseProperty(nameof(User.PenalDecreesRegisters))]
        public virtual User IssuerUser { get; set; }
        [ForeignKey(nameof(PenalDecreeTypeId))]
        [InverseProperty(nameof(NpenalDecreeType.PenalDecreesRegisters))]
        public virtual NpenalDecreeType PenalDecreeType { get; set; }
        [InverseProperty(nameof(AuanconfiscatedFish.PenalDecreeRegister))]
        public virtual ICollection<AuanconfiscatedFish> AuanconfiscatedFishes { get; set; }
        [InverseProperty(nameof(AuanviolatedRegulation.PenalDecreeRegister))]
        public virtual ICollection<AuanviolatedRegulation> AuanviolatedRegulations { get; set; }
        [InverseProperty(nameof(PenalDecreeFishCompensation.PenalDecreeRegister))]
        public virtual ICollection<PenalDecreeFishCompensation> PenalDecreeFishCompensations { get; set; }
        [InverseProperty(nameof(PenalDecreeSanction.PenalDecree))]
        public virtual ICollection<PenalDecreeSanction> PenalDecreeSanctions { get; set; }
        [InverseProperty(nameof(PenalDecreeSeizedFishingGear.PenalDecree))]
        public virtual ICollection<PenalDecreeSeizedFishingGear> PenalDecreeSeizedFishingGears { get; set; }
        [InverseProperty(nameof(PenalDecreeStatus.PenalDecree))]
        public virtual ICollection<PenalDecreeStatus> PenalDecreeStatuses { get; set; }
        [InverseProperty(nameof(PenalDecreesRegisterFile.Record))]
        public virtual ICollection<PenalDecreesRegisterFile> PenalDecreesRegisterFiles { get; set; }
        [InverseProperty(nameof(PenalPointsRegister.PenalRegister))]
        public virtual ICollection<PenalPointsRegister> PenalPointsRegisters { get; set; }
    }
}