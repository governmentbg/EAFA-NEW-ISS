// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace IARA.EntityModels.Entities
{
    /// <summary>
    /// Регистър наказателни точки
    /// </summary>
    [Table("PenalPointsRegister", Schema = "RInsp")]
    [Index(nameof(QualifiedFisherId), Name = "IXFK_PenalPointsRegister_FishermenRegister")]
    [Index(nameof(PointsOwnerLegalId), Name = "IXFK_PenalPointsRegister_Legals")]
    [Index(nameof(PenalRegisterId), Name = "IXFK_PenalPointsRegister_PenalDecreesRegister")]
    [Index(nameof(PermitLicenseId), Name = "IXFK_PenalPointsRegister_PermitLicensesRegister")]
    [Index(nameof(PermitId), Name = "IXFK_PenalPointsRegister_PermitRegister")]
    [Index(nameof(PointsOwnerPersonId), Name = "IXFK_PenalPointsRegister_Persons")]
    [Index(nameof(ShipId), Name = "IXFK_PenalPointsRegister_ShipRegister")]
    public partial class PenalPointsRegister
    {
        public PenalPointsRegister()
        {
            PenalPointComplaintStatuses = new HashSet<PenalPointComplaintStatus>();
            this.IsActive = true;
        }


        /// <summary>
        /// Уникален идентификатор
        /// </summary>
        [Key]
        [Column("ID")]
        public int Id { get; set; }
        /// <summary>
        /// НП
        /// </summary>
        [Column("PenalRegisterID")]
        public int PenalRegisterId { get; set; }
        /// <summary>
        /// Тип на присъдените точки - за Титуляр на РСР (PermitOwner) или за Капитан на кораб (QualifiedFisher)
        /// </summary>
        [Required]
        [StringLength(20)]
        public string PointsType { get; set; }
        /// <summary>
        /// Флаг дали се увеличават или намалят точките
        /// </summary>
        [Required]
        public bool? IsIncreasePoints { get; set; }
        /// <summary>
        /// № на заповед
        /// </summary>
        [Required]
        [StringLength(20)]
        public string DecreeNum { get; set; }
        /// <summary>
        /// Брой присъдени точки
        /// </summary>
        public int PointsAmount { get; set; }
        /// <summary>
        /// Дата на издаване
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime IssueDate { get; set; }
        /// <summary>
        /// Издател на докладна записка 
        /// </summary>
        [StringLength(500)]
        public string Issuer { get; set; }
        /// <summary>
        /// Дата на връчване
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? DeliveryDate { get; set; }
        /// <summary>
        /// Дата на влизане в сила
        /// </summary>
        [Column(TypeName = "date")]
        public DateTime? EffectiveDate { get; set; }
        /// <summary>
        /// Титуляр на РСР - физическо лице
        /// </summary>
        [Column("PointsOwnerPersonID")]
        public int? PointsOwnerPersonId { get; set; }
        /// <summary>
        /// Титуляр на РСР - юридическо лице
        /// </summary>
        [Column("PointsOwnerLegalID")]
        public int? PointsOwnerLegalId { get; set; }
        /// <summary>
        /// РСР
        /// </summary>
        [Column("PermitID")]
        public int PermitId { get; set; }
        /// <summary>
        /// Флаг дали собственика на точките е Титуляр на РСР
        /// </summary>
        public bool? IsPermitOwner { get; set; }
        /// <summary>
        /// Кораб
        /// </summary>
        [Column("ShipID")]
        public int? ShipId { get; set; }
        /// <summary>
        /// УСР
        /// </summary>
        [Column("PermitLicenseID")]
        public int? PermitLicenseId { get; set; }
        /// <summary>
        /// Титуляр на УСР - Правоспособен рибар (капитан)
        /// </summary>
        [Column("QualifiedFisherID")]
        public int? QualifiedFisherId { get; set; }
        /// <summary>
        /// Бележки
        /// </summary>
        [StringLength(4000)]
        public string Comments { get; set; }
        /// <summary>
        /// Флаг дали записът е активен или изтрит
        /// </summary>
        [Required]
        public bool IsActive { get; set; }
        /// <summary>
        /// Потребител създал записа
        /// </summary>
        [Required]
        [StringLength(500)]
        public string CreatedBy { get; set; }
        /// <summary>
        /// Дата и час на създаване на записа
        /// </summary>
        public DateTime CreatedOn { get; set; }
        /// <summary>
        /// Потребител последно актуализирал записа
        /// </summary>
        [StringLength(500)]
        public string UpdatedBy { get; set; }
        /// <summary>
        /// Дата и час на последна актуализация на записа
        /// </summary>
        public DateTime? UpdatedOn { get; set; }

        [ForeignKey(nameof(PenalRegisterId))]
        [InverseProperty(nameof(PenalDecreesRegister.PenalPointsRegisters))]
        public virtual PenalDecreesRegister PenalRegister { get; set; }
        [ForeignKey(nameof(PermitId))]
        [InverseProperty(nameof(PermitRegister.PenalPointsRegisters))]
        public virtual PermitRegister Permit { get; set; }
        [ForeignKey(nameof(PermitLicenseId))]
        [InverseProperty(nameof(PermitLicensesRegister.PenalPointsRegisters))]
        public virtual PermitLicensesRegister PermitLicense { get; set; }
        [ForeignKey(nameof(PointsOwnerLegalId))]
        [InverseProperty(nameof(Legal.PenalPointsRegisters))]
        public virtual Legal PointsOwnerLegal { get; set; }
        [ForeignKey(nameof(PointsOwnerPersonId))]
        [InverseProperty(nameof(Person.PenalPointsRegisters))]
        public virtual Person PointsOwnerPerson { get; set; }
        [ForeignKey(nameof(QualifiedFisherId))]
        [InverseProperty(nameof(FishermenRegister.PenalPointsRegisters))]
        public virtual FishermenRegister QualifiedFisher { get; set; }
        [ForeignKey(nameof(ShipId))]
        [InverseProperty(nameof(ShipRegister.PenalPointsRegisters))]
        public virtual ShipRegister Ship { get; set; }
        [InverseProperty(nameof(PenalPointComplaintStatus.PenalPoints))]
        public virtual ICollection<PenalPointComplaintStatus> PenalPointComplaintStatuses { get; set; }
    }
}